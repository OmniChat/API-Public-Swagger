swagger: "2.0"
info:
  version: "v1.0"
  title: "OmniChat"
  x-logo:
    url: "assets/omnichat_logo.png"
  description: |

    # Introdução
    A API da OmniChat foi desenvolvida de acordo com os melhores padrões REST.
    Seus endpoints possuem nomes intuitivos que indicam os recursos disponíveis.
    As operações são feitas de acordo com os verbos HTTP, com corpos de mensagem em JSON.
    As respostas podem ser interpretadas através do código de status HTTP.
    Isso permite que quaisquer aplicações consumam a API de forma simples e clara, independente da linguagem utilizada.

    ## Endpoint
    As chamadas para a API devem ser feitas para o mesmo endpoint `https://api.omni.chat/v1`

    ## Por motivos de performance e estabilidade, estamos removendo (e/ou) alterando compatibilidade de alguns recursos de nossa API v1.

    ## Os seguintes recursos serão removidos (e/ou) alterados a partir de 31/10/2021:

    * ```where``` - Não será mais permitido utilizar esse campo, disponibilizaremos campos com filtros pré-determinados;

    * ```order``` - Não será mais permitido utilizar esse campo, disponibilizaremos campos com ordenação pré-determinados;

    * ```limit``` - Agora todas as consultas serão limitadas ao máximo de 100 objetos, caso seja informado um valor superior à 100 um erro será retornado;

    * ```offset``` - Não será mais possível utilizar o offset em queries com paginação, em sequência disponibilizamos uma recomendação de como fazer paginação sem offset;

    ## Paginação
     Sugerimos utilizar o seguinte método para paginação:
    * Efetuar query pelo ```createdAt``` com início e fim

    * Utilizar o valor do último registro como início da próxima página;

    **Exemplo** de uma requisição com `createdAt.gt` (maior que) e `createdAt.lt` (menor que):
     ```curl
    curl "https://api.omni.chat/v1/chats?createdAt.gt=2021-08-25T20:20:00.000&createdAt.lt=2021-08-28T20:30:00.000" \
    -H 'x-api-key: <YOUR_API_KEY>' \
    -H 'x-api-secret: <YOUR_API_SECRET>' \
    -H 'Content-Type: application/json' \
    -H 'Accept: application/json'
     ```

    ## Os seguintes recursos serão removidos (e/ou) alterados a partir de 31/10/2021:

    ## Paginação - Obsoleto

    Nossa API tem suporte a buscas em massa através dos métodos "GET". Deste modo, vocês podem paginar pela listagem de objetos usando ```limit``` e ```offset```.
    Todos esses métodos de listagem possuem uma estrutura em comum, que é a de paginação.

    ```curl
    ## List 0 - 99 customers
    curl "https://api.omni.chat/v1/customers?limit=100" \
    -H 'x-api-key: <YOUR_API_KEY>' \
    -H 'x-api-secret: <YOUR_API_SECRET>' \
    -H 'Content-Type: application/json' \
    -H 'Accept: application/json'

    ## List 100 - 199 customers
    curl"https://api.omni.chat/v1/customers?limit=100&offset=100" \
    -H 'x-api-key: <YOUR_API_KEY>' \
    -H 'x-api-secret: <YOUR_API_SECRET>' \
    -H 'Content-Type: application/json' \
    -H 'Accept: application/json'
    ```

    ## Autenticação
    Para você poder utilizar a API da OmniChat você precisará fornecer duas informações no cabeçalho (HEADER) das suas requisições REST:
      - ```x-api-secret```: Chave de autorização obtida da OmniChat que identifica qual integração criada na sua loja OmniChat esta fazendo esta requisição.
      - ```x-api-key```: Chave de autorização obtida da OmniChat que identifica a sua loja.
    Além disso, devem ainda ser adicionados os headers Content-Type e Accept, com o valor application/json

    **Exemplo** de uma requisição contendo dos os campo obrigatórios:

    ```curl
    ## Count customers
    curl "https://api.omni.chat/v1/customers/count"
    -H "x-api-key: xR2DkhOEDsazac7iiaV6U9kwYJ3l26SIaE6UGVg2"
    -H "x-api-secret: r:0dfa3a7d4ffd4010c055d8f745bf8164"
    -H "Content-Type: application/json"
    ```

    ## Filtros

    Para todos os métodos de listagem na API, são permitidos os seguintes filtros:

    - ```createdAt.gt``` - filtra todos os documentos com data de criação maior que o informado;

    - ```createdAt.lt``` - filtra todos os documentos com data de criação inferior que o informado;

    - ```order.createdAt``` - ordenação apenas por createdAt (ASC | DESC);

    **Por exemplo**, para filtrar os usuários de forma decrescente:
    ```curl
    curl "https://api.omni.chat/v1/users?order.createdAt=DESC&createdAt.gt=2021-08-01&createdAt.lt=2021-08-16" \
    -H 'x-api-key: <YOUR_API_KEY>' \
    -H 'x-api-secret: <YOUR_API_SECRET>' \
    -H 'Content-Type: application/json' \
    -H 'Accept: application/json'
     ```

    ## Os seguintes recursos serão removidos (e/ou) alterados a partir de 31/10/2021:

    ## Filtros - Obsoleto

    Existem várias maneiras de colocar filtros nos objetos encontrados, usando o parâmetro *where* na URL da chamada REST.
    O valor do parâmetro *where* deve ser codificado como JSON.
    Assim, se você olhar para o URL real solicitado, ele seria codificado em JSON e depois codificado como URL.
    O uso mais simples do parâmetro *where* está filtrando o valor das propriedades.

    **Por exemplo**, para filtrar todos os pedidos que estão como status de pago:
    ```curl
      curl "https://api.omni.chat/v1/products \
      -H 'x-api-key: <YOUR_API_KEY>' \
      -H 'x-api-secret: <YOUR_API_SECRET>' \
      -H 'Content-Type: application/json' \
      -H "Accept: application/json" \
      --data-urlencode 'where={"status":"PAID"}'
    ```

    ## Os seguintes recursos serão removidos (e/ou) alterados a partir de 31/10/2021:

    ## Operações - Obsoleto
    Os valores do parâmetro *where* também suportam comparações além da correspondência exata.
    Em vez de um valor exato, forneça um JSON com as chaves correspondentes às comparações a serem feitas.
    O parâmetro *where* aceita estas opções:

    | Key     | Operação                   |
    |---------|----------------------------|
    | $lt     | Less Than                  |
    | $lte    | Less Than Or Equal To      |
    | $gt     | Greater Than               |
    | $gte    | Greater ThanOr Equal To    |
    | $ne     | Not Equal To               |
    | $in     | Contained In               |
    | $nin    | Not Contained in           |
    | $exists | A value is set for the key |

    ### Exemplos
    Listar todos os pedidos com desconto maior que 10%

    ```curl
      curl "https://api.omni.chat/v1/orders \
      -H 'x-api-key: <YOUR_API_KEY>' \
      -H 'x-api-secret: <YOUR_API_SECRET>' \
      -H 'Content-Type: application/json' \
      -H "Accept: application/json" \
      --data-urlencode 'where={"discountMode":"percentage", "discount":{"$gte": 10}}'
    ```

    Para lista todos os pedidos com status *PAID* ou *SHIPPED*:
    ```curl
    curl "https://api.omni.chat/v1/orders \
    -H 'x-api-key: <YOUR_API_KEY>' \
    -H 'x-api-secret: <YOUR_API_SECRET>' \
    -H 'Content-Type: application/json' \
    -H "Accept: application/json" \
    --data-urlencode 'where={"status":{"$in": ["PAID","SHIPPED"] }}'
    ```

    Todos os produtos que tenham algum valor em *definition1*:
    ```curl
      curl "https://api.omni.chat/v1/products \
      -H 'x-api-key: <YOUR_API_KEY>' \
      -H 'x-api-secret: <YOUR_API_SECRET>' \
      -H 'Content-Type: application/json' \
      -H "Accept: application/json" \
      --data-urlencode 'where={"definition1":{"$exists": true }}'
      ```

    Todos os clientes atualizados após 5/Set/2017:
    ```curl
    curl "https://api.omni.chat/v1/customers \
    -H 'x-api-key: <YOUR_API_KEY>' \
    -H 'x-api-secret: <YOUR_API_SECRET>' \
    -H 'Content-Type: application/json' \
    -H "Accept: application/json" \
    --data-urlencode 'where={"updatedAt":{"$gte":{"__type":"Date","iso":"2017-09-05T03:00:00.000Z"}}}'
    ```
    Uma observação importante no exemplo anterior.
    Como JSON não possui um mecanismo formal para inclusão de propriedades do tipo Date, nossa API padronizou o seguinte formato:
    ```json
    {
      "__type": "Date",
      "iso": "2011-08-21T18:02:52.249Z"
    }
    ```
    A propriedade iso contem um UTC timestamp no formato ISO 8601 com precisão de milissegundos: `YYYY-MM-DDTHH:MM:SS.MMMZ`

    ## Modelo
    A OmniChat utiliza uma base de dados NoSQL para melhor performance e escalabilidade.
    Para que um objeto possa ser relacionado com outro primeiro você precisa criar o objeto na OmniChat para obter o *objectId* do mesmo.
    Com o *objectId* do objeto você pode incluir em uma relação.

    Todos os objetos possuem 3 propriedades criadas pelo Backend após ele ser salvo.
    O Backend responde qualquer *POST* com objectId e createdAt e qualquer PUT com o *updatedAt*

    | Propriedade | Descrição                                                                                                      | Exemplo                  |
    |-------------|----------------------------------------------------------------------------------------------------------------|--------------------------|
    | objectId    | Identificador único deste objeto na base de dados da OmniChat                                                  | S3madcbe9H               |
    | createdAt   | A data e a hora que este objeto foi criado. API retorna o valor no formato ISO 8601 em UTC                     | 2017-08-04T16:27:55.397Z |
    | updatedAt   | A data e a hora que este objeto foi modificado pela última vez. API retorna o valor no formato ISO 8601 em UTC | 2017-08-04T16:27:55.397Z |
host: "api.omni.chat"
basePath: "/v1"
schemes:
  - "https"
tags:
  - name: chats
    description: Representa uma conversa entre um cliente e a loja. Possui uma ou mais mensagens relacionadas.
  - name: messages
    description: Mensagens enviadas ou recebidas
  - name: message-templates
    description: Templates pré cadastradas para criação de mensagens
  - name: interactions
    description: |
      Interações com clientes da sua loja e seus indicadores
      A conversa entre um cliente e a empresa em um determinado canal (ex WhatsApp) é
      representada por um único object `Chat`, mesmo que esta conversa seja finalizada e aberta inúmeras vezes.
      Para que seja possível medir e gerenciar quantas vezes o cliente chamou, tempo que um atendente demorou para
  - name: customers
    description: O cliente (customers) é o comprador cadastrado na loja e que pode efetuar pedidos. Pode ser do tipo pessoa física ou jurídica. Deve ter um endereço de entrega associados a ele.
  - name: products
    description: Produtos são itens vendidos por uma loja na OmniChat. Na criação de um pedido (order) ele será convertido em um item. Um produto pode ter variantes, que são diferentes opções do produto, como por exemplo, cor e tamanho.
  - name: orders
    description: Um Pedido é a conclusão da compra de um ou mais produtos da loja.
  - name: teams
    description: Times da sua loja.
  - name: branches
    description: Filias da sua loja
  - name: pricingtables
    description: Variações de preço para um produto
paths:
  /chats:
    get:
      description: "listar conversas


      **Observação**: É possível utilizar somente um dos filtros a seguir por request (`salesPersonId | teamId | status`) em conjunto com filtros de data.


      Ex: `/chats?salesPersonId=S3madcbe9H&createdAt.gt=2021-05-02&createdAt.lt=2021-05-10`"
      tags:
        - chats
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "salesPersonId"
          in: "query"
          required: false
          type: "string"
        - name: "teamId"
          in: "query"
          required: false
          type: "string"
        - name: "status"
          in: "query"
          required: false
          type: "string"
          enum: [FINISHED, UNASSIGNED]
        - name: "createdAt.gt"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.lt"
          in: "query"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          required: false
          type: "string"
          default: 100
          maximum: 100
          minimum: 1
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - name: "order"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "order.createdAt"
          in: "query"
          required: false
          type: "string"
          enum: [ASC, DESC]
        - name: "offset"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Chats"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/UnprocessableEntityError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/chats"
        responses:
          default:
            statusCode: "200"
          422:
            statusCode: "422"
        requestParameters:
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.querystring.limit: "method.request.querystring.limit"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.order: "method.request.querystring.order"
          integration.request.querystring.order.createdAt: "method.request.querystring.order.createdAt"
          integration.request.querystring.skip: "method.request.querystring.offset"
          integration.request.querystring.createdAt.lt: "method.request.querystring.createdAt.lt"
          integration.request.querystring.createdAt.gt: "method.request.querystring.createdAt.gt"
          integration.request.querystring.salesPersonId: "method.request.querystring.salesPersonId"
          integration.request.querystring.teamId: "method.request.querystring.teamId"
          integration.request.querystring.status: "method.request.querystring.status"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /chats/count:
    get:
      description: "Contar conversas"
      deprecated: true
      tags:
        - chats
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseCount"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/chats/count"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /chats/{objectId}:
    get:
      description: "Obter uma única conversa"
      tags:
        - chats
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Chat"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/chats/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.include: "'address'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.keys: "'lastName,fullName,acceptsMarketing,email,phoneAreaCode,phoneCountryCode,phoneNumber,businessAccount,businessName,businessTaxId,stateTaxId,name,birthDate,address,externalImageUrl,gender'"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    put:
      description: "Atualizar conversa"
      tags:
        - chats
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
        500:
          description: "500 response"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/chats/{objectId}"
        responses:
          default:
            statusCode: "200"
          500:
            statusCode: "500"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
  /chats/{objectId}/messages:
    get:
      description: "Listar mensagens de uma conversa"
      tags:
        - chats
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "createdAt.gt"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.lt"
          in: "query"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          required: false
          type: "string"
          default: 100
          maximum: 100
          minimum: 1
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - name: "order"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "order.createdAt"
          in: "query"
          required: false
          type: "string"
          enum: [ASC, DESC]
        - name: "offset"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Messages"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/UnprocessableEntityError"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/chats/{objectId}/messages"
        responses:
          default:
            statusCode: "200"
          422:
            statusCode: "422"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.querystring.limit: "method.request.querystring.limit"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.order: "method.request.querystring.order"
          integration.request.querystring.order.createdAt: "method.request.querystring.order.createdAt"
          integration.request.querystring.skip: "method.request.querystring.offset"
          integration.request.path.objectId: "method.request.path.objectId"
          integration.request.querystring.createdAt.lt: "method.request.querystring.createdAt.lt"
          integration.request.querystring.createdAt.gt: "method.request.querystring.createdAt.gt"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /chats/{objectId}/messages/count:
    get:
      description: "Contar mensagens de uma conversa"
      deprecated: true
      tags:
        - chats
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseCount"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/chats/{objectId}/messages/count"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /chats/{objectId}/messages/{messageId}:
    get:
      tags:
        - chats
      description: "Obter de uma conversa uma única mensagem"
      produces:
        - "application/json"
      parameters:
        - name: "messageId"
          in: "path"
          required: true
          type: "string"
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Message"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/chats/{objectId}/messages/{messageId}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.variantId: "method.request.path.messageId"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /chats/{objectId}/route:
    post:
      description: "Rotear conversa"
      tags:
        - chats
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "ChatRouting"
          required: true
          schema:
            $ref: "#/definitions/ChatRouting"
      responses:
        200:
          description: "200 response"
        400:
          description: "400 response"
        500:
          description: "500 response"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/chats/{objectId}/route"
        responses:
          200:
            statusCode: "200"
          400:
            statusCode: "400"
          500:
            statusCode: "500"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /chats/{objectId}/finish:
    post:
      description: "Finalizar a conversa conversa"
      tags:
        - chats
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "ChatFinishing"
          required: true
          schema:
            $ref: "#/definitions/ChatFinishing"
      responses:
        200:
          description: "200 response"
        400:
          description: "400 response"
        500:
          description: "500 response"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/chats/{objectId}/finish"
        responses:
          200:
            statusCode: "200"
          400:
            statusCode: "400"
          500:
            statusCode: "500"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"

  /customers:
    get:
      description: "Listar clientes"
      tags:
        - customers
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "salesPersonId"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.lt"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.gt"
          in: "query"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          required: false
          type: "string"
          default: 100
          maximum: 100
          minimum: 1
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - name: "order"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "offset"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "order.createdAt"
          in: "query"
          required: false
          type: "string"
          enum: [ASC, DESC]
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Customers"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/UnprocessableEntityError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/customers"
        responses:
          default:
            statusCode: "200"
          422:
            statusCode: "422"
        requestParameters:
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.querystring.limit: "method.request.querystring.limit"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.order: "method.request.querystring.order"
          integration.request.querystring.salesPersonId: "method.request.querystring.salesPersonId"
          integration.request.querystring.order.createdAt: "method.request.querystring.order.createdAt"
          integration.request.querystring.createdAt.lt: "method.request.querystring.createdAt.lt"
          integration.request.querystring.createdAt.gt: "method.request.querystring.createdAt.gt"
          integration.request.querystring.skip: "method.request.querystring.offset"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    post:
      description: "Criar cliente"
      tags:
        - customers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "NewCustomer"
          required: true
          schema:
            $ref: "#/definitions/NewCustomer"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/ResponseObjectCreate"
        400:
          description: "400 response"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/customers"
        responses:
          201:
            statusCode: "201"
          400:
            statusCode: "400"
          500:
            statusCode: "500"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /customers/count:
    get:
      description: "Contar clientes"
      deprecated: true
      tags:
        - customers
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseCount"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/customers/count"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /customers/{objectId}:
    get:
      description: "Obter um único cliente"
      tags:
        - customers
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Customer"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/customers/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.include: "'address'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.keys: "'lastName,fullName,acceptsMarketing,email,phoneAreaCode,phoneCountryCode,phoneNumber,businessAccount,businessName,businessTaxId,stateTaxId,name,birthDate,address,externalImageUrl,gender'"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    put:
      description: "Atualizar um cliente cliente"
      tags:
        - customers
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseUpdatedObject"
        500:
          description: "500 response"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/customers/{objectId}"
        responses:
          default:
            statusCode: "200"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    delete:
      description: "Apagar um cliente"
      tags:
        - customers
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseEmpty"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/customers/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"
  /interactions:
    get:
      description: "Listar interações"
      tags:
        - interactions
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "createdAt.gt"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.lt"
          in: "query"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          required: false
          type: "string"
          default: 100
          maximum: 100
          minimum: 1
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - name: "order"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "order.createdAt"
          in: "query"
          required: false
          type: "string"
          enum: [ASC, DESC]
        - name: "offset"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Interactions"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/UnprocessableEntityError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/interactions"
        responses:
          default:
            statusCode: "200"
          422:
            statusCode: "422"
        requestParameters:
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.querystring.limit: "method.request.querystring.limit"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.order: "method.request.querystring.order"
          integration.request.querystring.order.createdAt: "method.request.querystring.order.createdAt"
          integration.request.querystring.skip: "method.request.querystring.offset"
          integration.request.querystring.createdAt.lt: "method.request.querystring.createdAt.lt"
          integration.request.querystring.createdAt.gt: "method.request.querystring.createdAt.gt"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /interactions/count:
    get:
      description: "Contar interações"
      deprecated: true
      tags:
        - interactions
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseCount"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/interactions/count"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /interactions/{objectId}:
    get:
      description: "Obter uma única interação"
      tags:
        - interactions
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Interaction"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/interactions/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.include: "'address'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.keys: "'lastName,fullName,acceptsMarketing,email,phoneAreaCode,phoneCountryCode,phoneNumber,businessAccount,businessName,businessTaxId,stateTaxId,name,birthDate,address,externalImageUrl,gender'"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /message-templates:
    get:
      description: "Listar templates de mensagem"
      tags:
        - message-templates
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "createdAt.gt"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.lt"
          in: "query"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          required: false
          type: "string"
          default: 100
          maximum: 100
          minimum: 1
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - name: "order"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "order.createdAt"
          in: "query"
          required: false
          type: "string"
          enum: [ASC, DESC]
        - name: "offset"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MessageTemplate"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/UnprocessableEntityError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/message-templates"
        responses:
          default:
            statusCode: "200"
          422:
            statusCode: "422"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.querystring.limit: "method.request.querystring.limit"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.order: "method.request.querystring.order"
          integration.request.querystring.order.createdAt: "method.request.querystring.order.createdAt"
          integration.request.querystring.skip: "method.request.querystring.offset"
          integration.request.querystring.createdAt.lt: "method.request.querystring.createdAt.lt"
          integration.request.querystring.createdAt.gt: "method.request.querystring.createdAt.gt"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /message-templates/count:
    get:
      description: "Contar templates de mensagem"
      deprecated: true
      tags:
        - message-templates
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: false
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseCount"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/message-templates/count"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /messages:
    get:
      description: "Listar mensagens"
      tags:
        - messages
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "createdAt.gt"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.lt"
          in: "query"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          required: false
          type: "string"
          default: 100
          maximum: 100
          minimum: 1
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - name: "order"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "order.createdAt"
          in: "query"
          required: false
          type: "string"
          enum: [ASC, DESC]
        - name: "offset"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Messages"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/UnprocessableEntityError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/messages"
        responses:
          default:
            statusCode: "200"
          422:
            statusCode: "422"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.querystring.limit: "method.request.querystring.limit"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.order: "method.request.querystring.order"
          integration.request.querystring.order.createdAt: "method.request.querystring.order.createdAt"
          integration.request.querystring.skip: "method.request.querystring.offset"
          integration.request.querystring.createdAt.lt: "method.request.querystring.createdAt.lt"
          integration.request.querystring.createdAt.gt: "method.request.querystring.createdAt.gt"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    post:
      description: "Criar mensagem"
      tags:
        - messages
      produces:
        - "application/json"
      parameters:
        - name: "x-api-secret"
          in: "header"
          required: false
          type: "string"
        - name: "x-api-key"
          in: "header"
          required: false
          type: "string"
        - in: "body"
          name: "NewMessage"
          required: true
          schema:
            $ref: "#/definitions/NewMessage"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/ResponseObjectCreate"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/messages"
        responses:
          default:
            statusCode: "200"
          201:
            statusCode: "201"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.header.x-api-key: "method.request.header.x-api-key"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /messages/{objectId}:
    get:
      description: "Obter uma única mensagem"
      tags:
        - messages
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Message"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/messages/{objectId}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.include:
            "'order, salesPerson, product,\
            \ variant, chat, chat.customer, chat.customer.address'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /orders:
    get:
      description: "Listar pedidos"
      tags:
        - orders
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "salesPersonId"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.gt"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.lt"
          in: "query"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          required: false
          type: "string"
          default: 100
          maximum: 100
          minimum: 1
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - name: "order"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "offset"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "order.createdAt"
          in: "query"
          required: false
          type: "string"
          enum: [ASC, DESC]
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Orders"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/UnprocessableEntityError"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/orders"
        responses:
          default:
            statusCode: "200"
          422:
            statusCode: "422"
        requestParameters:
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.querystring.limit: "method.request.querystring.limit"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.order: "method.request.querystring.order"
          integration.request.querystring.skip: "method.request.querystring.offset"
          integration.request.querystring.order.createdAt: "method.request.querystring.order.createdAt"
          integration.request.querystring.createdAt.lt: "method.request.querystring.createdAt.lt"
          integration.request.querystring.createdAt.gt: "method.request.querystring.createdAt.gt"
          integration.request.querystring.salesPersonId: "method.request.querystring.salesPersonId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"

    post:
      description: "Criar um pedido"
      tags:
        - orders
      produces:
        - "application/json"
      parameters:
        - name: "x-api-secret"
          in: "header"
          type: "string"
          required: true
        - name: "x-api-key"
          in: "header"
          type: "string"
          required: true
        - in: "body"
          name: "NewOrder"
          required: true
          schema:
            $ref: "#/definitions/NewOrder"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Orders"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/orders"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.header.x-api-key: "method.request.header.x-api-key"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"

  /orders/count:
    get:
      description: "Contar pedidos"
      deprecated: true
      tags:
        - orders
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseCount"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/orders/count"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /orders/{objectId}:
    get:
      description: "Obter um único pedido"
      tags:
        - orders
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Order"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/orders/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.include: "'customer,items,notes,user,shippingAddress,salesPerson,statusTracking'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"

  # Orders statusChange
  /orders/{objectId}/statusChanges:
    post:
      tags:
        - orders
      description: "Alterar o status de uma ordem"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "StatusChange"
          required: true
          schema:
            $ref: "#/definitions/StatusChange"
      responses:
        200:
          description: "200 response"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/orders/{objectId}/statusChanges"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"

  /products:
    get:
      description: "Listar produtos"
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "createdAt.gt"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.lt"
          in: "query"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          required: false
          type: "string"
          default: 100
          maximum: 100
          minimum: 1
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - name: "order"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "order.createdAt"
          in: "query"
          required: false
          type: "string"
          enum: [ASC, DESC]
        - name: "offset"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Products"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/UnprocessableEntityError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products"
        responses:
          default:
            statusCode: "200"
          422:
            statusCode: "422"
        requestParameters:
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.limit: "method.request.querystring.limit"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.order: "method.request.querystring.order"
          integration.request.querystring.order.createdAt: "method.request.querystring.order.createdAt"
          integration.request.querystring.skip: "method.request.querystring.offset"
          integration.request.querystring.createdAt.lt: "method.request.querystring.createdAt.lt"
          integration.request.querystring.createdAt.gt: "method.request.querystring.createdAt.gt"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    post:
      description: "Criar produto"
      tags:
        - products
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "NewProduct"
          required: true
          schema:
            $ref: "#/definitions/NewProduct"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/ResponseObjectCreate"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/ResponseError"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/ResponseError"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products"
        responses:
          201:
            statusCode: "201"
          400:
            statusCode: "400"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /products/count:
    get:
      description: "Contar produtos"
      deprecated: true
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseCount"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/count"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /products/{objectId}:
    get:
      description: "Obter um único produto"
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Product"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.include: "'variants,mainVariant'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    put:
      description: "Atualizar um produto"
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseUpdatedObject"
        500:
          description: "500 response"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}"
        responses:
          default:
            statusCode: "200"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    delete:
      description: "Apagar um produto"
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseEmpty"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"
  /products/{objectId}/variants:
    get:
      description: "Listar variantes de um produto"
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Variants"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}/variants"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    post:
      description: "Criar variante de um produto"
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "NewVariant"
          required: true
          schema:
            $ref: "#/definitions/NewVariant"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseObjectCreate"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}/variants"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /products/{objectId}/variants/count:
    get:
      description: "Contar variantes de um produto"
      deprecated: true
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseCount"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}/variants/count"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /products/{objectId}/variants/{variantId}:
    put:
      description: "Atualizar variante de um produto"
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "variantId"
          in: "path"
          required: true
          type: "string"
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseUpdatedObject"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}/variants/{variantId}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.variantId: "method.request.path.variantId"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    delete:
      description: "Apagar variante de um produto"
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "variantId"
          in: "path"
          required: true
          type: "string"
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseEmpty"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}/variants/{variantId}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.variantId: "method.request.path.variantId"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"
  /products/{objectId}/variants/{variantId}/prices:
    get:
      description: "Listar os preços de um produto por uma variante."
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "variantId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Price"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}/variants/{variantId}/prices"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
          integration.request.path.variantId: "method.request.path.variantId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /products/{objectId}/prices:
    post:
      description: "Criar um preço para o produto"
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "NewPrice"
          required: true
          schema:
            $ref: "#/definitions/NewPrice"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/ResponseObjectCreate"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/ResponseError"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/ResponseError"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}/prices"
        responses:
          201:
            statusCode: "201"
          400:
            statusCode: "400"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /products/{objectId}/prices/{priceId}:
    get:
      description: "Obter um único preço de produto"
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "priceId"
          in: "path"
          required: true
          type: "string"
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Price"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}/prices/{priceId}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
          integration.request.path.priceId: "method.request.path.priceId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    put:
      description: "Atualizar preço de um produto"
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "priceId"
          in: "path"
          required: true
          type: "string"
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseUpdatedObject"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}/prices/{priceId}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.priceId: "method.request.path.priceId"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    delete:
      description: "Deletar preço de um produto"
      tags:
        - products
      produces:
        - "application/json"
      parameters:
        - name: "priceId"
          in: "path"
          required: true
          type: "string"
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseEmpty"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/products/{objectId}/prices/{priceId}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.priceId: "method.request.path.priceId"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"
  /teams:
    get:
      description: "Listar times"
      tags:
        - teams
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "createdAt.gt"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.lt"
          in: "query"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          required: false
          type: "string"
          default: 100
          maximum: 100
          minimum: 1
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - name: "order"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "order.createdAt"
          in: "query"
          required: false
          type: "string"
          enum: [ASC, DESC]
        - name: "offset"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Teams"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/UnprocessableEntityError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/teams"
        responses:
          default:
            statusCode: "200"
          422:
            statusCode: "422"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.querystring.limit: "method.request.querystring.limit"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.order: "method.request.querystring.order"
          integration.request.querystring.order.createdAt: "method.request.querystring.order.createdAt"
          integration.request.querystring.skip: "method.request.querystring.offset"
          integration.request.querystring.createdAt.lt: "method.request.querystring.createdAt.lt"
          integration.request.querystring.createdAt.gt: "method.request.querystring.createdAt.gt"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    post:
      description: "Criar time"
      tags:
        - teams
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "NewTeam"
          required: true
          schema:
            $ref: "#/definitions/NewTeam"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/ResponseObjectCreate"
        400:
          description: "400 response"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/teams"
        responses:
          201:
            statusCode: "201"
          400:
            statusCode: "400"
          500:
            statusCode: "500"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /teams/{objectId}:
    get:
      description: "Obter um único time"
      tags:
        - teams
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Team"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/teams/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.include: "'address'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.keys: "'lastName,fullName,acceptsMarketing,email,phoneAreaCode,phoneCountryCode,phoneNumber,businessAccount,businessName,businessTaxId,stateTaxId,name,birthDate,address,externalImageUrl,gender'"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    put:
      description: "Atualizar um time"
      tags:
        - teams
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseUpdatedObject"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/teams/{objectId}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    delete:
      description: "Apagar um time"
      tags:
        - teams
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseEmpty"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/teams/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"
  /teams/{objectId}/supervisors:
    put:
      description: "Adicionar um supervisor num time"
      tags:
        - teams
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseUpdatedObject"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/teams/{objectId}/supervisors"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    delete:
      description: "Remover um supervisor de um time"
      tags:
        - teams
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseEmpty"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/teams/{objectId}/supervisors"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"
  /teams/{objectId}/users:
    put:
      description: "Adicionar um usuário num time"
      tags:
        - teams
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseUpdatedObject"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/teams/{objectId}/users"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    delete:
      description: "Remover um usuário de um time"
      tags:
        - teams
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseEmpty"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/teams/{objectId}/users"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"
  /branches:
    get:
      description: "Listar filiais"
      tags:
        - branches
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "createdAt.gt"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.lt"
          in: "query"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          required: false
          type: "string"
          default: 100
          maximum: 100
          minimum: 1
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - name: "order"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "order.createdAt"
          in: "query"
          required: false
          type: "string"
          enum: [ASC, DESC]
        - name: "offset"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Branches"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/UnprocessableEntityError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/branches"
        responses:
          default:
            statusCode: "200"
          422:
            statusCode: "422"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.querystring.limit: "method.request.querystring.limit"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.order: "method.request.querystring.order"
          integration.request.querystring.order.createdAt: "method.request.querystring.order.createdAt"
          integration.request.querystring.skip: "method.request.querystring.offset"
          integration.request.querystring.createdAt.lt: "method.request.querystring.createdAt.lt"
          integration.request.querystring.createdAt.gt: "method.request.querystring.createdAt.gt"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    post:
      description: "Criar filial"
      tags:
        - branches
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "NewBranch"
          required: true
          schema:
            $ref: "#/definitions/NewBranch"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/ResponseObjectCreate"
        400:
          description: "400 response"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/pricingtables"
        responses:
          201:
            statusCode: "201"
          400:
            statusCode: "400"
          500:
            statusCode: "500"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /branches/{objectId}:
    get:
      description: "Obter uma única filial"
      tags:
        - branches
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Branch"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/branches/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.include: "'address'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.keys: "'lastName,fullName,acceptsMarketing,email,phoneAreaCode,phoneCountryCode,phoneNumber,businessAccount,businessName,businessTaxId,stateTaxId,name,birthDate,address,externalImageUrl,gender'"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    put:
      description: "Atualizar Filial"
      tags:
        - branches
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseUpdatedObject"
        500:
          description: "500 response"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/branches/{objectId}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    delete:
      description: "Remover Filial"
      tags:
        - branches
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseEmpty"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/branches/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"

  /pricingtables:
    get:
      description: "Listar Tabela de Preços"
      tags:
        - pricingtables
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "createdAt.gt"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.lt"
          in: "query"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          required: false
          type: "string"
          default: 100
          maximum: 100
          minimum: 1
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - name: "order"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "order.createdAt"
          in: "query"
          required: false
          type: "string"
          enum: [ASC, DESC]
        - name: "offset"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/PricingTables"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/UnprocessableEntityError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/pricingtables"
        responses:
          default:
            statusCode: "200"
          422:
            statusCode: "422"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.querystring.limit: "method.request.querystring.limit"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.order: "method.request.querystring.order"
          integration.request.querystring.order.createdAt: "method.request.querystring.order.createdAt"
          integration.request.querystring.skip: "method.request.querystring.offset"
          integration.request.querystring.createdAt.lt: "method.request.querystring.createdAt.lt"
          integration.request.querystring.createdAt.gt: "method.request.querystring.createdAt.gt"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    post:
      description: "Criar Tabela de Preço"
      tags:
        - pricingtables
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "NewPricingTable"
          required: true
          schema:
            $ref: "#/definitions/NewPricingTable"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/ResponseObjectCreate"
        400:
          description: "400 response"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/pricingtables"
        responses:
          201:
            statusCode: "201"
          400:
            statusCode: "400"
          500:
            statusCode: "500"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /pricingtables/{objectId}:
    get:
      description: "Obter uma única Tabela de Preço"
      tags:
        - pricingtables
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/PricingTable"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/pricingtables/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    put:
      description: "Atualizar uma Tabela de Preço"
      tags:
        - pricingtables
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseUpdatedObject"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/pricingtable/{objectId}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    delete:
      description: "Remover uma Tabela de Preço"
      tags:
        - pricingtables
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseEmpty"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/pricingtables/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"
  /pricingtables/{objectId}/branches:
    put:
      description: "Adicionar uma filial em uma Tabela de Preços"
      tags:
        - pricingtables
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseUpdatedObject"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/pricingtables/{objectId}/branches"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    delete:
      description: "Remover uma filial em uma Tabela de Preços"
      tags:
        - pricingtables
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseEmpty"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/pricingtables/{objectId}/branches"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"
  /pricingtables/{objectId}/teams:
    put:
      description: "Adicionar uma time em uma Tabela de Preços"
      tags:
        - pricingtables
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "OnlyObjectId"
          required: true
          schema:
            $ref: "#/definitions/OnlyObjectId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseUpdatedObject"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/pricingtables/{objectId}/teams"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    delete:
      description: "Remover uma time em uma Tabela de Preços"
      tags:
        - pricingtables
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseEmpty"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/pricingtables/{objectId}/teams"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"

  /users:
    get:
      description: "Listar usuários"
      tags:
        - users
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "email"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.gt"
          in: "query"
          required: false
          type: "string"
        - name: "createdAt.lt"
          in: "query"
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          required: false
          type: "string"
          default: 100
          maximum: 100
          minimum: 1
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - name: "order"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "offset"
          in: "query"
          required: false
          type: "string"
          description: '**Deprecated**'
        - name: "order.createdAt"
          in: "query"
          required: false
          type: "string"
          enum: [ASC, DESC]
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Users"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/UnprocessableEntityError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/users"
        responses:
          default:
            statusCode: "200"
          422:
            statusCode: "422"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.querystring.limit: "method.request.querystring.limit"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.order: "method.request.querystring.order"
          integration.request.querystring.email: "method.request.querystring.email"
          integration.request.querystring.order.createdAt: "method.request.querystring.order.createdAt"
          integration.request.querystring.skip: "method.request.querystring.offset"
          integration.request.querystring.createdAt.lt: "method.request.querystring.createdAt.lt"
          integration.request.querystring.createdAt.gt: "method.request.querystring.createdAt.gt"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    post:
      description: "Criar usuário"
      tags:
        - users
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "NewUser"
          required: true
          schema:
            $ref: "#/definitions/NewUser"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/ResponseObjectCreate"
        400:
          description: "400 response"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/users"
        responses:
          201:
            statusCode: "201"
          400:
            statusCode: "400"
          500:
            statusCode: "500"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
  /users/count:
    get:
      description: "Contar usuários"
      deprecated: true
      tags:
        - users
      produces:
        - "application/json"
      parameters:
        - name: "where"
          in: "query"
          required: false
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseCount"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/users/count"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.querystring.where: "method.request.querystring.where"
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /users/{objectId}:
    get:
      description: "Obter um único usuário"
      tags:
        - users
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/users/{objectId}"
        responses:
          default:
            statusCode: "200"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.querystring.keys: "'lastName,fullName,acceptsMarketing,email,phoneAreaCode,phoneCountryCode,phoneNumber,businessAccount,businessName,businessTaxId,stateTaxId,name,birthDate,address,externalImageUrl,gender'"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    put:
      description: "Atualizar um usuário"
      tags:
        - users
      produces:
        - "application/json"
      parameters:
        - name: "objectId"
          in: "path"
          required: true
          type: "string"
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseUpdatedObject"
        500:
          description: "500 response"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ResponseError"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/users/{objectId}"
        responses:
          default:
            statusCode: "200"
          500:
            statusCode: "500"
          404:
            statusCode: "404"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
          integration.request.path.objectId: "method.request.path.objectId"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
  /users/settings:
    post:
      description: "Atualiza acesso HSM de um range usuários"
      tags:
        - users
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "x-api-secret"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "UserSettingsModel"
          required: true
          schema:
            $ref: "#/definitions/UserSettingsModel"
      responses:
        200:
          description: "200 response"
        400:
          description: "400 response"
        500:
          description: "500 response"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator:
        "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        uri: "https://api-adapter.omni.chat/users/settings"
        responses:
          200:
            statusCode: "200"
          400:
            statusCode: "400"
          500:
            statusCode: "500"
        requestParameters:
          integration.request.header.X-Parse-REST-API-Key: "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'"
          integration.request.header.X-Parse-Application-Id: "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'"
          integration.request.header.x-api-secret: "method.request.header.x-api-secret"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  UserSettingsModel:
    type: "object"
    properties:
      attendanceEnabled:
        type: "boolean"
        description: "habilita / desabilitar atendimento dos usuários"
        default: false
      users:
        type: array
        items:
          type: string
        description: "Lista de Ids dos usuários"
  ChatRouting:
    type: "object"
    properties:
      teamId:
        type: "string"
        description: "Id do time para o qual o atendimento sera redirecionado"
      userId:
        type: "string"
        description: "Id do usuário para o qual o atendimento sera redirecionado"
      type:
        type: "string"
        description: "Comportamento esperado do redirecionamento, pode ser para TEAM ou USER"
    description: "Contem as informações para redirecionamento dos atendimentos"
  ChatFinishing:
    type: "object"
    properties:
      reason:
        type: "string"
        description: "A razão pela qual o atendimento esta sendo finalizado"
    description: "Contem as informações para redirecionamento dos atendimentos"
  Branches:
    type: "object"
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/Branch"
    description: "Lista de filiais"
  Orders:
    type: "object"
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/Order"
    description: "Lista de pedidos"
  Products:
    type: "object"
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/Product"
    description: "Lista de produtos"
  Branch:
    type: "object"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      createdAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      updatedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      zip:
        type: "string"
        description: "CEP"
      suburb:
        type: "string"
        description: "Bairro"
      addressLine1:
        type: "string"
        description: "Primeira linha do endereço, normalmente é no nome da rua."
      addressLine2:
        type: "string"
        description: "Segunda linha do endereço, normalmente é o complemento"
      number:
        type: "string"
        description: "Número"
      phone:
        type: "string"
        description: "Número telefone"
      identificator:
        type: "string"
        description: "Identificador das filiais"
      city:
        type: "string"
        description: "Cidade"
      addressState:
        type: "string"
        description: "Estado"
      country:
        type: "string"
        description: "Pais"
      tradingHours:
        $ref: "#/definitions/TradingHours"
        description: "Horários de funcionamento"
  TradingHours:
    type: "object"
    properties:
      monday:
        $ref: "#/definitions/TradingHoursDay"
      tuesday:
        $ref: "#/definitions/TradingHoursDay"
      wednesday:
        $ref: "#/definitions/TradingHoursDay"
      thursday:
        $ref: "#/definitions/TradingHoursDay"
      friday:
        $ref: "#/definitions/TradingHoursDay"
      saturday:
        $ref: "#/definitions/TradingHoursDay"
      sunday:
        $ref: "#/definitions/TradingHoursDay"
      timeZone:
        type: "number"
  TradingHoursDay:
    type: "object"
    properties:
      opens:
        type: "boolean"
        description: "Se existe atendimento nesse dia."
      opensAt:
        type: "string"
        description: "Horário do inicio de atendimento"
      closesAt:
        type: "string"
        description: "Horário final de atendimento"
  User:
    type: "object"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      createdAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      updatedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      name:
        type: "string"
        description: "Nome do usuário"
      disabled:
        type: "boolean"
        description: "Se este usuário esta desabilitado"
  Address:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Nome de referência deste endereço. Por exemplo: Casa"
      addressLine1:
        type: "string"
        description: "Primeira linha do endereço, normalmente é no nome da rua."
      addressLine2:
        type: "string"
        description: "Segunda linha do endereço, normalmente é o complemento"
      number:
        type: "string"
        description: "Número"
      suburb:
        type: "string"
        description: "Bairro"
      state:
        type: "string"
        description: "Estado"
      country:
        type: "string"
        description:
          "Código do pais utilizando o formato ISO 3166-1. Exemplo para\
          \ o Brasil usamos BRA."
      zip:
        type: "string"
        description: "CEP"
  NewMessage:
    type: "object"
    required:
      - templateId
      - platformId
      - templateTokens
    properties:
      templateId:
        type: "string"
        format: "uuid10"
        # example: gaW16ESxZF
        description: "ObjectId da template a ser usada para esta mensagem"
      platformId:
        type: string
        # example: 5541998765434
        description: Identificador do destinatário desta mensagem no formato da plataforma associada a esta mensagem
      templateTokens:
        type: array
        # example: [Pedro, 1234, Bom dia, Verde]
        items:
          type: string
        description: Substituições a serem usadas na mensagem disponíveis da template utilizada
  Message:
    type: "object"
    properties:
      objectId:
        type: "string"
        # example: gaW16ESxZ2
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      createdAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      updatedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      type:
        $ref: "#/definitions/MessageTypeEnum"
        description: "Estado"
      status:
        $ref: "#/definitions/MessageStatus"
        description: "Estado"
      timestamp:
        type: number
        # example: "1529686974000"
        description: "Timestamp da criação da mensagem informado pelo plataforma"
      text:
        type: "string"
        description: "Texto da mensagem"
      chat:
        $ref: "#/definitions/Chat"
        description: "Conversa que esta mensagem pertence"
      system:
        type: boolean
        description: "Se esta mensagem automatizada ou se foi um atendente humano"
      error:
        type: string
        description: Mensagem teve algum erro no seu processamento
      isCreatingNewChat:
        type: boolean
        description: Caso a conversa seja iniciada pela empresa
      note:
        type: boolean
        description: "Se esta mensagem é uma nota interna"
      user:
        $ref: "#/definitions/User"
        description: "Usuário que envio esta mensagem"
      routedToUser:
        $ref: "#/definitions/User"
        description: "Caso seja uma mensagem de roteamento para usuário, este é o usuário destino"
      readBy:
        $ref: "#/definitions/User"
        description: "Quem leu esta mensagem pela primeira vez"
      routedToTeam:
        $ref: "#/definitions/Team"
        description: "Caso seja uma mensagem de roteamento para time, este é o time destino"
      snoozedUntil:
        type: "string"
        format: "date-time"
        description: "Caso seja uma mensagem de adiamento, este é o dia e horário que a mensagem voltara para o atendimento"
      attachmentUrl:
        type: string
        # example: https://api-private.omni.chat/parse/files/UCeS99itvZg1tsea2OSoyKvpLbKddhoVAPotIQOy/3160bedc9649094822e493f90380a7a_file.ogg"
        description: URL do anexo desta mensagem
      quotedMessage:
        $ref: "#/definitions/QuotedMessage"
        description: "Esta mensagem faz referência a outra mensagem desta conversa"
      order:
        $ref: "#/definitions/Order"
        description: "Caso o type seja ```Order``` esta propriedade estará presente"
      product:
        $ref: "#/definitions/Product"
        description: "Caso o type seja ```Product``` esta propriedade estará presente"
      variant:
        $ref: "#/definitions/Variant"
        description: "Caso o type seja ```Variant``` esta propriedade estará presente"
  QuotedMessage:
    type: "object"
    properties:
      text:
        type: "string"
        description: "Texto da mensagem"
      type:
        $ref: "#/definitions/MessageTypeEnum"
      quotedMessageObjectId:
        type: "string"
        format: "uuid10"
        description: "ObjectId na mensagem que esta mensagem faz referência"

  MessageTemplate:
    type: "object"
    properties:
      objectId:
        type: "string"
        # example: gaW16ESxZ2
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      createdAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      updatedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      text:
        type: "string"
        description: "Texto da mensagem"
      platform:
        type: "string"
        # example: WHATSAPP
        description: "Plataforma que esta sendo utilizada nesta conversa"
      status:
        $ref: "#/definitions/MessageTemplateStatusEnum"
        description: "Status de aprovação desta mensagem"

  MessageTemplateStatusEnum:
    type: "string"
    enum:
      - "REQUESTED"
      - "READY"

  MessageStatus:
    type: "string"
    enum:
      - "OUTGOING_CREATED"
      - "OUTGOING_SENT"
      - "OUTGOING_DELIVERED"
      - "OUTGOING_READ"
      - "OUTGOING_ERROR"
      - "OUTGOING_SILENT"
      - "EXTERNAL_OUTGOING_SILENT"
      - "INCOMING_RECEIVED"
      - "INCOMING_READ"
  MessageTypeEnum:
    type: "string"
    enum:
      - "TEXT"
      - "IMAGE"
      - "AUDIO"
      - "VIDEO"
      - "FILE"
      - "LOCATION"
      - "PRODUCT"
      - "VARIANT"
      - "PAYMENT_REQUEST"
      - "ORDER_CONFIRMATION"
      - "ORDER_STATUS"
      - "COLLECTION"
      - "VCARD"
      - "MULTI_VCARD"
      - "SNOOZE_START"
      - "SNOOZE_END"
      - "TEMPLATE"
      - "ROUTING"

  Customer:
    type: "object"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      createdAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      updatedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      name:
        type: "string"
        description: "Nome do cliente"
      lastName:
        type: "string"
        description: "Sobrenome do cliente"
      acceptsMarketing:
        type: "string"
        description: "Se o cliente aceita receber material de marketing"
      email:
        type: "string"
        description: "Email do cliente"
      phoneAreaCode:
        type: "string"
        description: "Código de área do telefone"
      phoneCountryCode:
        type: "string"
        description: "Código do país"
      phoneNumber:
        type: "string"
        description: "Número do telefone"
      businessName:
        type: "string"
        description: "Se o cliente representa uma empresa. Este é o nome da empresa."
      birthDate:
        type: "string"
        description: "Data de nascimento"
      maskedBirthDate:
        type: "string"
        description: "Data de nascimento com o mascaramento aplicado"
      businessAccount:
        type: "boolean"
        description: "Se este cliente representa uma empresa"
      taxDocumentNumber:
        type: "string"
        description: "CPF do cliente"
      salesPerson:
        description: "Atendente responsável"
        $ref: "#/definitions/User"
      address:
        type: "array"
        description: "O endereço de entrega do cliente"
        items:
          $ref: "#/definitions/Address"
      gender:
        description: "Sexo do cliente"
        $ref: "#/definitions/GenderEnum"
  ResponseError:
    type: "object"
    properties:
      code:
        type: "number"
        description: "O código do erro"
      error:
        type: "string"
        description: "Breve descrição do erro"
  UnprocessableEntityError:
    type: "object"
    properties:
      message:
        type: "string"
        description: "Mensagem de erro"
      code:
        type: "number"
        description: "Código do erro"
      type:
        type: "string"
        description: "Tipo do erro"
      details:
        type: "array"
        description: "Lista de erros"
        items:
          type: "object"
          properties:
            message:
              type: "string"
            path:
              type: "array"
              items:
                type: "string"
            type:
              type: "string"
            context:
              type: "object"
              properties:
                type:
                  type: "string"
                label:
                  type: "string"
                value:
                  type: "string"
                key:
                  type: "string"
  OrderStatusEnum:
    type: "string"
    enum:
      - "CREATING"
      - "CREATED"
      - "PROVISIONING"
      - "OPEN"
      - "WAITING"
      - "PAID"
      - "PACKAGED"
      - "SHIPPED"
      - "PARTIALLY_SHIPPED"
      - "DELIVERED"
      - "NOT_PAID"
      - "PARTIAL_PAID"
      - "OVER_PAID"
      - "CANCELLED"
      - "REVERTED"
      - "ERROR"
  NewTeam:
    type: "object"
    required:
      - "name"
    properties:
      name:
        type: "string"
        description: "Nome do produto"
      slaTiming:
        type: number
        description: Tempo em minutos da SLA
      slaRule:
        type: object
        description: Configuração da SLA do time
        properties:
          ruleData:
            type: object
            properties:
              teamId:
                type: string
                description: ObjectId do time que irá receber atendimentos com SLA expirado deste time
  Teams:
    type: "object"
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/Team"
    description: "Lista de Times"
  PricingTables:
    type: "object"
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/PricingTable"
    description: "Lista de Tabela de Preços"
  Product:
    type: "object"
    required:
      - "mainVariant"
      - "name"
      - "variants"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      createdAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      updatedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      name:
        type: "string"
        description: "Nome do produto"
      definition1:
        type: "string"
        description: "O nome da primeira definição do produto. Por exemplo: Cor"
      definition1Values:
        type: "array"
        description:
          "Todos os possíveis valores da primeira definição do produto.\
          \ Exemplo: Azul, Verde e Preto"
        items:
          type: "string"
      definition2:
        type: "string"
        description: "O nome da segunda definição do produto. Por exemplo: Tamanho"
      definition2Values:
        type: "array"
        description:
          "Todos os possíveis valores da primeira definição do produto.\
          \ Exemplo: P, M e G"
        items:
          type: "string"
      erpId:
        type: "string"
        description:
          "Código utilizado no sistema de ERP para identificar este cliente.\
          \ Normalmente é o código de barras"
      blocked:
        type: "boolean"
        description:
          "Indica se este produto esta bloqueado para vendas. Este produto\
          \ será listado na aba de produtos da OmniChat, mas não será mostrado como\
          \ disponível para inclusão em um pedido"
        default: false
      service:
        type: "boolean"
        description: "Indica se este produto é um serviço"
        default: false
      trackInventory:
        type: "boolean"
        description:
          "Se verdadeiro a OmniChat irá controla o estoque. Quando um novo\
          \ pedido é criado o estoque da variante é decrementado, quando um pedido\
          \ é cancelado ou não pago o estoque é restaurado"
        default: false
      sellOutOfStock:
        type: "boolean"
        description:
          "Se este produto pode ser vendido com estoque igual ou inferior\
          \ a zero"
        default: false
      enablePricingTable:
        type: "boolean"
        description: "Se este produto pode utilizar a configuração de tabela de preço"
        default: false
      mainVariant:
        description: "A variante principal deste produto"
        $ref: "#/definitions/Variant"
      variants:
        type: "array"
        description: "Todas as variantes deste produto, inclusive a variante principal"
        items:
          $ref: "#/definitions/Variant"
  Users:
    type: "object"
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/User"
    description: "Lista de Usuários"
  GenderEnum:
    type: "string"
    enum:
      - "male"
      - "female"
      - "neutral"
      - "other"
  NewCustomer:
    type: "object"
    required:
      - "lastName"
      - "name"
    properties:
      name:
        type: "string"
        description: "Nome do cliente"
      lastName:
        type: "string"
        description: "Sobrenome do cliente"
      acceptsMarketing:
        type: "string"
        description: "Se o cliente aceita receber material de marketing"
        default: "false"
      email:
        type: "string"
        description: "Email do cliente"
      phoneAreaCode:
        type: "string"
        description: "Código de área do telefone"
      phoneCountryCode:
        type: "string"
        description: "Código do país"
        default: "55"
      phoneNumber:
        type: "string"
        description: "Número do telefone"
      birthDate:
        type: "string"
        description: "Data de nascimento"
      businessAccount:
        type: "boolean"
        description: "Se este cliente representa uma empresa"
        default: false
      businessName:
        type: "string"
        description: "Se o cliente representa uma empresa. Este é o nome da empresa."
      taxDocumentNumber:
        type: "string"
        description: "CPF do cliente"
      address:
        description: "O endereço de entrega do cliente"
        $ref: "#/definitions/Address"
      gender:
        description: "Sexo do cliente"
        $ref: "#/definitions/GenderEnum"
  NewOrderItem:
    type: "object"
    properties:
      name:
        type: "string"
        description:
          "Nome deste item. É copiado de product.name quando incluído no\
          \ carrinho"
      description:
        type: "string"
        description:
          "Detalhes deste item. É copiado de product.detail quando incluí\
          do no carrinho"
      price:
        type: "number"
        description: "Preço deste item"
      productReference:
        type: "string"
        description: "Código de referência deste item. É copiado de variant.erpId"
      quantity:
        type: "number"
        description: "A quantidade deste item"
      variantObjectId:
        type: "string"
        description: "O objectId da variante que deu origem a este item."
      weight:
        type: "number"
        description: "Peso desta item em gramas. É copiado de variant.weight"
        minimum: 0.0
      length:
        type: "number"
        description: "Comprimento desta item em centímetros. É copiado de variant.length"
        minimum: 0.0
      height:
        type: "number"
        description: "Altura desta item em centímetros. É copiado de variant.height"
        minimum: 0.0
      width:
        type: "number"
        description: "Largura desta item em centímetros. É copiado de variant.width"
        minimum: 0.0
      service:
        type: "boolean"
        description: "Se este item é um serviço"
  Item:
    type: "object"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      name:
        type: "string"
        description:
          "Nome deste item. É copiado de product.name quando incluído no\
          \ carrinho"
      description:
        type: "string"
        description:
          "Detalhes deste item. É copiado de product.detail quando incluí\
          do no carrinho"
      price:
        type: "number"
        description: "Preço deste item"
      productReference:
        type: "string"
        description: "Código de referência deste item. É copiado de variant.erpId"
      quantity:
        type: "number"
        description: "A quantidade deste item"
      variant:
        description: "O objectId da variante que deu origem a este item."
        $ref: "#/definitions/Variant"
      weight:
        type: "number"
        description: "Peso desta item em gramas. É copiado de variant.weight"
        minimum: 0.0
      length:
        type: "number"
        description: "Comprimento desta item em centímetros. É copiado de variant.length"
        minimum: 0.0
      height:
        type: "number"
        description: "Altura desta item em centímetros. É copiado de variant.height"
        minimum: 0.0
      width:
        type: "number"
        description: "Largura desta item em centímetros. É copiado de variant.width"
        minimum: 0.0
  ResponseUpdatedObject:
    type: "object"
    properties:
      updatedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
  Chat:
    type: "object"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      createdAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      updatedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      platform:
        type: "string"
        # example: WHATSAPP
        description: "Plataforma que esta sendo utilizada nesta conversa"
      platformId:
        type: "string"
        # example: "5541991912345"
        description: "Identificador único do usuário na plataforma para esta conversa"
      retailerId:
        type: "string"
        # example: "554133333333"
        description: "Identificador único da loja na plataforma para esta conversa"
      name:
        type: "string"
        # example: Fulano da Silva
        description: "Nome informado pela pessoa nesta conversa"
      email:
        type: "string"
        # example: teste@acme.com
        description: "Email informado pela pessoa nesta conversa"
      timezone:
        type: integer
        # example: -3
        description: "Fuso horário da pessoa nesta conversa"
      gender:
        $ref: "#/definitions/GenderEnum"
        description: "Gênero informado pela pessoa nesta conversa"
      phone:
        type: "string"
        # example: "5541909876765"
        description: "Telefone informado pela pessoa nesta conversa"
      imageUrl:
        type: "string"
        # example: "https://api-private.omni.chat/parse/files/UCeS99itvZg1tsea2OSoyKvpLbKddhoVAPotIQOy/78267794f22d3226236afdd9f59f5261_image.jpg"
        description: "Imagem da pessoa nesta conversa"
      status:
        type: "string"
        # example: FINISHED
        description: "Status desta conversa"
      labels:
        type: "array"
        description: "Labels do chat"
        items:
          $ref: "#/definitions/Labels"
      user:
        $ref: "#/definitions/User"
        description: "Usuário atual na OmniChat dono desta conversa"
      customer:
        $ref: "#/definitions/Customer"
        description: "Cliente cadastrado na loja associado a esta conversa"
  Labels:
    type: "object"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      title:
        type: "string"
        description: "Titulo do label na base da OmniChat"
  PricingTable:
    type: "object"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      name:
        type: "string"
        description: "Nome do Tabela"
      description:
        type: "string"
        description: "Descrição do Tabela"
      branches:
        type: "array"
        description: "Filiais participantes desta tabela"
        items:
          $ref: "#/definitions/Branch"
      teams:
        type: "array"
        description: "Times participantes desta tabela"
        items:
          $ref: "#/definitions/Team"
  Team:
    type: "object"
    required:
      - "name"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      createdAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      updatedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      name:
        type: "string"
        description: "Nome do produto"
      users:
        type: "array"
        description: "Usuários participantes deste time"
        items:
          $ref: "#/definitions/User"
      supervisors:
        type: "array"
        description: "Supervisores deste time"
        items:
          $ref: "#/definitions/User"
  Chats:
    type: "object"
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/Chat"
    description: "Lista de conversas"
  NewProduct:
    type: "object"
    required:
      - name
      - productDescription
      - mainVariant
      - variants
    properties:
      name:
        type: "string"
        description: "Nome do produto"
      productDescription:
        type: "string"
        description: "Descrição do produto"
      erpId:
        type: "string"
        description: "Código de referência do produto cadastrado no ERP."
      externalId:
        type: "string"
        description: "Código de referência do produto em outra plataforma que esta sendo sincronizada com a OmniChat."
      definition1:
        description: "Nome da variação 1 do produto. Exemplo: Cor"
      definition1Values:
        type: "array"
        description:
          "Todos os possíveis valores da primeira definição do produto.\
          \ Exemplo: Azul, Verde e Preto"
        items:
          type: string
          # example: [Vermelho, Laranja, Amarelo, Verde]
      definition2:
        type: "string"
        description: "O nome da segunda definição do produto. Por exemplo: Tamanho"
      definition2Values:
        type: "array"
        description:
          "Todos os possíveis valores da primeira definição do produto.\
          \ Exemplo: P, M e G"
        items:
          type: string
          # example: [P, M, G]
      blocked:
        type: "boolean"
        description:
          "Indica se este produto esta bloqueado para vendas. Este produto\
          \ será listado na aba de produtos da OmniChat, mas não será mostrado como\
          \ disponível para inclusão em um pedido"
        default: false
      service:
        type: "boolean"
        description: "Indica se este produto é um serviço"
        default: false
      trackInventory:
        type: "boolean"
        description:
          "Se verdadeiro a OmniChat irá controla o estoque. Quando um novo\
          \ pedido é criado o estoque da variante é decrementado, quando um pedido\
          \ é cancelado ou não pago o estoque é restaurado"
        default: false
      sellOutOfStock:
        type: "boolean"
        description:
          "Se este produto pode ser vendido com estoque igual ou inferior\
          \ a zero"
        default: false
      enablePricingTable:
        type: "boolean"
        description: "Se este produto pode utilizar a configuração de tabela de preço"
        default: false
      mainVariant:
        $ref: "#/definitions/Variant"
      variants:
        type: "array"
        description: "Todas as variantes deste produto, inclusive a variante principal"
        items:
          $ref: "#/definitions/NewVariant"

  StatusChange:
    type: "object"
    required:
      - "status"
      - "responsible"
    properties:
      status:
        type: "string"
        description: "Status que para o qual a ordem será alterada"
      responsible:
        type: "string"
        description: "Responsável pela troca do status"
  OnlyObjectId:
    type: "object"
    required:
      - "objectId"
    properties:
      objectId:
        type: "string"
        description: "Object Id"
  NewUser:
    type: "object"
    required:
      - "email"
      - "name"
      - "password"
    properties:
      email:
        type: "string"
        description: "Email do usuário"
      name:
        type: "string"
        description: "Nome do usuário"
      password:
        type: "string"
        description: "Senha do usuário que está sendo criado"
  NewPricingTable:
    type: "object"
    required:
      - "name"
      - "description"
    properties:
      name:
        type: "string"
        description: "Nome"
      description:
        type: "string"
        description: "Descrição"
  NewBranch:
    type: "object"
    required:
      - "zip"
      - "suburb"
      - "addressLine1"
      - "number"
      - "phone"
      - "identificator"
      - "city"
      - "name"
      - "country"
      - "addressState"
      - "tradingHours"
    properties:
      zip:
        type: "string"
        description: "Cep"
      suburb:
        type: "string"
        description: "Bairro"
      addressLine1:
        type: "string"
        description: "Primeira linha do endereço, normalmente é no nome da rua."
      number:
        type: "string"
        description: "Número"
      phone:
        type: "string"
        description: "Número telefone"
      identificator:
        type: "string"
        description: "Identificador das filiais"
      city:
        type: "string"
        description: "Cidade"
      name:
        type: "string"
        description: "Nome"
      country:
        type: "string"
        description:
          "Código do pais utilizando o formato ISO 3166-1. Exemplo para\
          \ o Brasil usamos BRA."
      addressState:
        type: "string"
        description: "UF"
      tradingHours:
        $ref: "#/definitions/TradingHours"
        description: "Horário de funcionamento"
  Order:
    type: "object"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      createdAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      updatedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      canAcceptBoleto:
        type: "object"
        description: "Se este pedido pode ser pelo cliente usando boleto"
        properties: {}
      boletoInstructions:
        type: "object"
        description: "Instruções relativas ao pagamento por boleto deste pedido"
        properties:
          dueDate:
            type: "string"
            description:
              "A data de vencimento do boleto. Se installments for maior\
              \ que 1, então esta é a data de vencimento do 1.o boleto"
          installments:
            type: "string"
            description: "O número de boletos que serão gerados"
      canAcceptCreditCard:
        type: "boolean"
        description: "Se este pedido pode ser pago usando cartão de crédito"
      creditCardInstructions:
        type: "object"
        description:
          "Instruções relativas ao pagamento por cartão de crédito deste\
          \ pedido"
        properties:
          installments:
            type: "string"
            description: "Máximo de parcelas aceitas para pagamento deste pedido"
      customer:
        description: "Comprador deste pedido"
        $ref: "#/definitions/Customer"
      deliveryTime:
        type: "string"
        description: "Quanto tempo este pedido irá demorar para chegar até o cliente"
      shippingCost:
        type: "number"
        description: "O custo do frete"
      discountMode:
        description: "Como este desconto será calculado"
        $ref: "#/definitions/OrderDiscountModeEnum"
      discount:
        type: "number"
        description: "Valor do desconto"
      paymentInstallmentsCount:
        type: "number"
        description:
          "Número de parcelas selecionadas pelo cliente para pagamento\
          \ deste pedido. Somente usado para pagamento no cartão de crédito"
      items:
        type: "array"
        description: "Lista de itens deste pedido"
        items:
          $ref: "#/definitions/Item"
      notes:
        type: "array"
        description: "Notas sobre este pedido"
        items:
          $ref: "#/definitions/Note"
      pickUpInStore:
        type: "boolean"
        description: "Se cliente irá buscar este pedido na loja"
      salesChannel:
        type: "string"
        description: "Canal de vendas informado pelo vendedor"
      shippingAddress:
        description: "O endereço de entrega deste pedido"
        $ref: "#/definitions/Address"
      shippingMethod:
        type: "string"
        description: "Qual o método de envio para este pedido"
      paymentMethod:
        description: "Como o cliente escolhei pagar por este pedido"
        $ref: "#/definitions/OrderPaymentMethodEnum"
      status:
        description: "O status atual deste pedido"
        $ref: "#/definitions/OrderStatusEnum"
      paymentGatewayId:
        type: "string"
        description:
          "Identificador único deste pedido no Gateway de pagamento configurado\
          \ nesta loja"
      orderId:
        type: "string"
        description:
          "Identificador único deste pedido. Automaticamente incrementado\
          \ quando um novo pedido é criado"
      teamId:
        type: "string"
        description: "Identificador único do time que gerou o pedido"
      paymentDetail:
        description: "Detalhes do pagamento"
        $ref: "#/definitions/PaymentDetail"
      paymentGatewayMundipagg:
        description: "Dados da MundiPagg selecionada"
        type: object
        properties:
          id:
            type: string
          title:
            type: string
          branch:
            type: object
            properties:
              merchantCategoryCode:
                type: string
              paymentFacilitatorCode:
                type: string
              code:
                type: string
              name:
                type: string
              phone:
                type: string
              document:
                type: string
  PaymentDetail:
    type: "object"
    properties:
      TID:
        type: "string"
        description: "Identificador identificador da operação com cartão de crédito"
      AuthorizationCode:
        type: "string"
        description: "Código de autorização da operação"
      NSU:
        type: "string"
        description: "Número sequencial único"
  OrderDiscountModeEnum:
    type: "string"
    enum:
      - "PERCENTAGE"
      - "ABSOLUTE"
  Messages:
    type: "object"
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/Message"
    description: "Lista de mensagens"
  Interaction:
    type: "object"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      createdAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      updatedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      status:
        type: "string"
        $ref: "#/definitions/InteractionStatusEnum"
      chat:
        $ref: "#/definitions/Chat"
        description: "Conversa que esta interação pertence"
      contactedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que o cliente foi atendido. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      finishedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que esta interação foi concluída. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      finishedBy:
        $ref: "#/definitions/User"
        description: "Usuário que finalizou esta interação"
      contactedBy:
        $ref: "#/definitions/User"
        description: "Usuário que iniciou esta interação"
      retailerCreated:
        type: "boolean"
        description: "Interação foi criada pela loja e não pelo usuário (ativo)"
      participatingUsers:
        type: array
        description: "Todos os usuários que participaram desta interação"
        items:
          $ref: "#/definitions/User"
      closingReason:
        type: "string"
        description: "Motivo do atendimento escolhido pelo usuário no fechamento desta interação"
      supportRate:
        type: number
        description: "Nota do atendimento assinalada pelo cliente. Só disponível quando esta funcionalidade estiver disponível "
      teamId:
        type: "string"
        description: "Identificador único do time que esta com a interação"
      botFowardedToTeam:
        type: "string"
        description: "Identificador único do time no qual o bot encaminhou"
      botFowardedAt:
        type: "string"
        description: "Data no qual o encaminhamento pelo bot foi feita"

  ResponseObjectCreate:
    type: "object"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      createdAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
  ResponseCount:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int32"
        description: "Número de objetos encontrados"
  Price:
    type: "object"
    required:
      - price
      - variant
      - pricingTable
    properties:
      price:
        type: "number"
        description: "Preço desta variante"
        minimum: 0.0
      salePrice:
        type: "number"
        description: "Promoção desta variante"
        minimum: 0.0
      active:
        type: "boolean"
        description: "Se falso então este preço não poderá ser utilizado em um pedido"
        default: true
      variant:
        type: "object"
        description: "variante deste preço"
        items:
          $ref: "#/definitions/Variant"
      pricingTable:
        type: "object"
        description: "variante deste preço"
        items:
          $ref: "#/definitions/PricingTable"

  Variant:
    type: "object"
    properties:
      objectId:
        type: "string"
        format: "uuid10"
        description: "Identificador único deste objeto na base de dados da OmniChat"
      createdAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      updatedAt:
        type: "string"
        format: "date-time"
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
      weight:
        type: "number"
        description: "Peso desta variante em gramas"
        minimum: 0.0
      length:
        type: "number"
        description: "Comprimento desta variante em centímetros"
        minimum: 0.0
      height:
        type: "number"
        description: "Altura desta variante em centímetros"
        minimum: 0.0
      width:
        type: "number"
        description: "Largura desta variante em centímetros"
        minimum: 0.0
      price:
        type: "number"
        description: "Preço desta variante"
        minimum: 0.0
      salePrice:
        type: "number"
        description: "Promoção desta variante"
        minimum: 0.0
      quantity:
        type: "integer"
        format: "int32"
        description:
          "Quantidade desta variante em estoque, se aplica quando product.trackInventory\
          \ estiver marcado como verdadeiro"
        minimum: 0.0
      erpId:
        type: "string"
        description:
          "O código do sistema de ERP associado a esta variante, normalmente\
          \ é o código de barras"
      definition1Value:
        type: "string"
        description: "O valor da primeira definição desta variante. Exemplo: Azul"
      definition2Value:
        type: "string"
        description: "O valor da segunda definição desta variante. Exemplo: P"
      imageUrl:
        type: "string"
        format: "url"
        description: "A url da imagem desta variante"
      visible:
        type: "boolean"
        description: "Se falso então esta variante não poderá ser incluída em um pedido"
        default: true

  NewPrice:
    type: "object"
    required:
      - price
      - variant
      - pricingTable
    properties:
      price:
        type: "number"
        description: "Valor deste preço"
        minimum: 0.0
      salePrice:
        type: "number"
        description: "Valor de promoção deste preço"
        minimum: 0.0
      active:
        type: "boolean"
        description: "Se falso então este preço não poderá ser utilizado em um pedido"
        default: true
      variant:
        type: "string"
        description: "ObjectId de uma variant"
      pricingTable:
        type: "string"
        description: "ObjectId de uma tabela de preço"

  NewVariant:
    type: "object"
    required:
      - "price"
    properties:
      weight:
        type: "number"
        description: "Peso desta variante em gramas"
        minimum: 0.0
      length:
        type: "number"
        description: "Comprimento desta variante em centímetros"
        minimum: 0.0
      height:
        type: "number"
        description: "Altura desta variante em centímetros"
        minimum: 0.0
      width:
        type: "number"
        description: "Largura desta variante em centímetros"
        minimum: 0.0
      price:
        type: "number"
        description: "Preço desta variante"
        minimum: 0.0
      salePrice:
        type: "number"
        description: "Promoção desta variante"
        minimum: 0.0
      quantity:
        type: "integer"
        format: "int32"
        description:
          "Quantidade desta variante em estoque, se aplica quando product.trackInventory\
          \ estiver marcado como verdadeiro"
        minimum: 0.0
      erpId:
        type: "string"
        description:
          "O código do sistema de ERP associado a esta variante, normalmente\
          \ é o código de barras"
      definition1Value:
        type: "string"
        description: "O valor da primeira definição desta variante. Exemplo: Azul"
      definition2Value:
        type: "string"
        description: "O valor da segunda definição desta variante. Exemplo: P"
      imageUrl:
        type: "string"
        format: "url"
        description: "A url da imagem desta variante"
      visible:
        type: "boolean"
        description: "Se falso então esta variante não poderá ser incluída em um pedido"
        default: true
      isMainVariant:
        type: "boolean"
        description: "Essa deve ser a variante principal deste produto. Apenas uma ```variant``` deve ser marcada como true"
        default: true

  Prices:
    type: "object"
    properties:
      results:
        type: "array"
        description: "Lista de preços"
        items:
          $ref: "#/definitions/Price"
  Variants:
    type: "object"
    properties:
      results:
        type: "array"
        description: "Lista de variantes"
        items:
          $ref: "#/definitions/Variant"
  ResponseEmpty:
    type: "object"
    title: "ResponseEmpty Schema"
  Customers:
    type: "object"
    properties:
      results:
        type: "array"
        description: "Lista de clientes"
        items:
          $ref: "#/definitions/Customer"
    description:
      "O cliente (customers) é o comprador cadastrado na loja e que pode\
      \ efetuar pedidos. Pode ser do tipo pessoa física ou jurídica."
  Note:
    type: "object"
    properties:
      text:
        type: "string"
        description: "Texto desta nota"
  OrderPaymentMethodEnum:
    type: "string"
    enum:
      - "CREDITCARD"
      - "BOLETO"
  InteractionStatusEnum:
    type: "string"
    enum:
      - "WAITING"
      - "CONTACTED"
      - "FINISHED"
  Interactions:
    type: "object"
    properties:
      results:
        type: "array"
        items:
          $ref: "#/definitions/Interaction"
    description: "Lista de Atendimentos"

  NewOrder:
    type: "object"
    properties:
      canAcceptBoleto:
        type: "boolean"
        description: "Se este pedido pode ser pago pelo cliente usando boleto"
        default: false
      boletoInstructions:
        type: "object"
        description: "Instruções relativas ao pagamento por boleto deste pedido"
        properties:
          dueDate:
            type: "string"
            description:
              "A data de vencimento do boleto. Se installments for maior\
              \ que 1, então esta é a data de vencimento do 1.o boleto"
          installments:
            type: "string"
            description: "O número de boletos que serão gerados"
      canAcceptCreditCard:
        type: "boolean"
        description: "Se este pedido pode ser pago pelo cliente usando cartão de crédito"
        default: false
      creditCardInstructions:
        type: "object"
        description: "Instruções relativas ao pagamento por cartão de crédito deste pedido"
        properties:
          installments:
            type: "string"
            description: "O número de parcelas deste pedido"
      customerId:
        type: "string"
        description: "Id do cliente (Customer)"
      deliveryTime:
        type: "string"
        description: "Prazo de entrega do pedido"
      shippingCost:
        type: "number"
        description: "Valor do frete do pedido"
      discountMode:
        type: "string"
        description: "Tipo de desconto do pedido"
        enum:
          - "PERCENTAGE"
          - "ABSOLUTE"
      discount:
        type: "number"
        description: "Valor do desconto do pedido"
      items:
        type: "array"
        description: "Lista de itens deste pedido"
        items:
          $ref: "#/definitions/NewOrderItem"
      notes:
        type: "array"
        description: "Notas sobre este pedido"
        items:
          $ref: "#/definitions/Note"
      pickUpInStore:
        type: "boolean"
        description: "Se o pedido for retirado na loja"
      orderId:
        type: "string"
        description: "Id externo do pedido"
      shippingAddress:
        type: "object"
        description: "O endereço de entrega do cliente"
        items:
          $ref: "#/definitions/Address"
      shippingMethod:
        type: "string"
        description: "Método de envio do pedido"
      paymentMethod:
        type: "string"
        description: "Método de pagamento do pedido"
        enum:
          - "CREDITCARD"
          - "BOLETO"
      status:
        type: "string"
        description: "Status do pedido"
        enum:
          - "CREATING"
          - "CREATED"
          - "PROVISIONING"
          - "OPEN"
          - "WAITING"
          - "COLLECT_PAYMENT"
          - "PAID"
          - "PACKAGED"
          - "SHIPPED"
          - "PARTIALLY_SHIPPED"
          - "DELIVERED"
          - "NOT_PAID"
          - "PARTIAL_PAID"
          - "OVER_PAID"
          - "CANCELLED"
          - "REVERTED"
          - "ERROR"
      teamId:
        type: "string"
        description: "ObjectId do time que gerou o pedido"
      salesPersonId:
        type: "string"
        description: "ObjectId do usuário que criou o pedido"

x-amazon-apigateway-documentation:
  version: "1.0"
  createdDate: "2018-03-21T01:13:32Z"
  documentationParts:
    - location:
        type: "METHOD"
        path: "/chats/count"
        method: "GET"
      properties:
        description: "Contar conversas"
    - location:
        type: "METHOD"
        path: "/chats/{objectId}/messages/count"
        method: "GET"
      properties:
        description: "numero de mensagens desta conversa"
    - location:
        type: "METHOD"
        path: "/chats/{objectId}/messages/{messageId}"
        method: "GET"
      properties:
        description: "Obter uma única mensagem a partir de seu identificador único"
    - location:
        type: "METHOD"
        path: "/chats/{objectId}/messages"
        method: "GET"
      properties:
        description: "Listar mensagens"
    - location:
        type: "METHOD"
        path: "/chats/{objectId}"
        method: "GET"
      properties:
        description: "Obter uma única conversa baseada no seu identificador único"
    - location:
        type: "METHOD"
        path: "/chats"
        method: "GET"
      properties:
        description: "listar clientes"
    - location:
        type: "MODEL"
        name: "Address.addressLine1"
      properties:
        description: "Primeira linha do endereço, normalmente é no nome da rua."
    - location:
        type: "MODEL"
        name: "Address.addressLine2"
      properties:
        description: "Segunda linha do endereço, normalmente é o complemento"
    - location:
        type: "MODEL"
        name: "Address.country"
      properties:
        description:
          "Código do pais utilizando o formato ISO 3166-1. Exemplo para o\
          \ Brasil usamos BRA."
    - location:
        type: "MODEL"
        name: "Address.name"
      properties:
        description: "Nome de referência deste endereço. Por exemplo: Casa"
    - location:
        type: "MODEL"
        name: "Address.number"
      properties:
        description: "Número"
    - location:
        type: "MODEL"
        name: "Address.state"
      properties:
        description: "Estado"
    - location:
        type: "MODEL"
        name: "Address.suburb"
      properties:
        description: "Bairro"
    - location:
        type: "MODEL"
        name: "Address.zip"
      properties:
        description: "CEP"
    - location:
        type: "MODEL"
        name: "Chat.createdAt"
      properties:
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Chat.objectId"
      properties:
        description: "Identificador único deste objeto na base de dados da OmniChat"
    - location:
        type: "MODEL"
        name: "Chat.updatedAt"
      properties:
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Chats"
      properties:
        description: "Lista de conversas"
    - location:
        type: "MODEL"
        name: "Customer.acceptsMarketing"
      properties:
        description: "Se o cliente aceita receber material de marketing"
    - location:
        type: "MODEL"
        name: "Customer.address"
      properties:
        description: "O endereço de entrega do cliente"
    - location:
        type: "MODEL"
        name: "Customer.birthDate"
      properties:
        description: "Data de nascimento"
    - location:
        type: "MODEL"
        name: "Customer.maskedBirthDate"
      properties:
        description: "Data de nascimento com o mascaramento aplicado"
    - location:
        type: "MODEL"
        name: "Customer.businessAccount"
      properties:
        description: "Se este cliente representa uma empresa"
    - location:
        type: "MODEL"
        name: "Customer.businessName"
      properties:
        description: "Se o cliente representa uma empresa. Este é o nome da empresa."
    - location:
        type: "MODEL"
        name: "Customer.createdAt"
      properties:
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Customer.email"
      properties:
        description: "Email do cliente"
    - location:
        type: "MODEL"
        name: "Customer.gender"
      properties:
        description: "Sexo do cliente"
    - location:
        type: "MODEL"
        name: "Customer.lastName"
      properties:
        description: "Sobrenome do cliente"
    - location:
        type: "MODEL"
        name: "Customer.name"
      properties:
        description: "Nome do cliente"
    - location:
        type: "MODEL"
        name: "Customer.objectId"
      properties:
        description: "Identificador único deste objeto na base de dados da OmniChat"
    - location:
        type: "MODEL"
        name: "Customer.phoneAreaCode"
      properties:
        description: "Código de área do telefone"
    - location:
        type: "MODEL"
        name: "Customer.phoneCountryCode"
      properties:
        description: "Código do país"
    - location:
        type: "MODEL"
        name: "Customer.phoneNumber"
      properties:
        description: "Número do telefone"
    - location:
        type: "MODEL"
        name: "Customer.taxDocumentNumber"
      properties:
        description: "CPF do cliente"
    - location:
        type: "MODEL"
        name: "Customer.updatedAt"
      properties:
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Customers.results"
      properties:
        description: "Lista de clientes"
    - location:
        type: "MODEL"
        name: "Customers"
      properties:
        description:
          "O cliente (customers) é o comprador cadastrado na loja e que pode\
          \ efetuar pedidos. Pode ser do tipo pessoa física ou jurídica."
    - location:
        type: "MODEL"
        name: "Item.description"
      properties:
        description:
          "Detalhes deste item. É copiado de product.detail quando incluí\
          do no carrinho"
    - location:
        type: "MODEL"
        name: "Item.height"
      properties:
        description: "Altura desta item em centímetros. É copiado de variant.height"
    - location:
        type: "MODEL"
        name: "Item.length"
      properties:
        description: "Comprimento desta item em centímetros. É copiado de variant.length"
    - location:
        type: "MODEL"
        name: "Item.name"
      properties:
        description:
          "Nome deste item. É copiado de product.name quando incluído no\
          \ carrinho"
    - location:
        type: "MODEL"
        name: "Item.objectId"
      properties:
        description: "Identificador único deste objeto na base de dados da OmniChat"
    - location:
        type: "MODEL"
        name: "Item.price"
      properties:
        description: "Preço deste item"
    - location:
        type: "MODEL"
        name: "Item.productReference"
      properties:
        description: "Código de referência deste item. É copiado de variant.erpId"
    - location:
        type: "MODEL"
        name: "Item.quantity"
      properties:
        description: "A quantidade deste item"
    - location:
        type: "MODEL"
        name: "Item.variant"
      properties:
        description: "O objectId da variante que deu origem a este item."
    - location:
        type: "MODEL"
        name: "Item.weight"
      properties:
        description: "Peso desta item em gramas. É copiado de variant.weight"
    - location:
        type: "MODEL"
        name: "Item.width"
      properties:
        description: "Largura desta item em centímetros. É copiado de variant.width"
    - location:
        type: "MODEL"
        name: "Message.createdAt"
      properties:
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Message.objectId"
      properties:
        description: "Identificador único deste objeto na base de dados da OmniChat"
    - location:
        type: "MODEL"
        name: "Message.updatedAt"
      properties:
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Messages"
      properties:
        description: "Lista de mensagens"
    - location:
        type: "MODEL"
        name: "NewCustomer.acceptsMarketing"
      properties:
        description: "Se o cliente aceita receber material de marketing"
    - location:
        type: "MODEL"
        name: "NewCustomer.address"
      properties:
        description: "O endereço de entrega do cliente"
    - location:
        type: "MODEL"
        name: "NewCustomer.birthDate"
      properties:
        description: "Data de nascimento"
    - location:
        type: "MODEL"
        name: "NewCustomer.businessAccount"
      properties:
        description: "Se este cliente representa uma empresa"
    - location:
        type: "MODEL"
        name: "NewCustomer.businessName"
      properties:
        description: "Se o cliente representa uma empresa. Este é o nome da empresa."
    - location:
        type: "MODEL"
        name: "NewCustomer.email"
      properties:
        description: "Email do cliente"
    - location:
        type: "MODEL"
        name: "NewCustomer.gender"
      properties:
        description: "Sexo do cliente"
    - location:
        type: "MODEL"
        name: "NewCustomer.lastName"
      properties:
        description: "Sobrenome do cliente"
    - location:
        type: "MODEL"
        name: "NewCustomer.name"
      properties:
        description: "Nome do cliente"
    - location:
        type: "MODEL"
        name: "NewCustomer.phoneAreaCode"
      properties:
        description: "Código de área do telefone"
    - location:
        type: "MODEL"
        name: "NewCustomer.phoneCountryCode"
      properties:
        description: "Código do país"
    - location:
        type: "MODEL"
        name: "NewCustomer.phoneNumber"
      properties:
        description: "Número do telefone"
    - location:
        type: "MODEL"
        name: "NewCustomer.taxDocumentNumber"
      properties:
        description: "CPF do cliente"
    - location:
        type: "MODEL"
        name: "NewProduct.blocked"
      properties:
        description:
          "Indica se este produto esta bloqueado para vendas. Este produto\
          \ será listado na aba de produtos da OmniChat, mas não será mostrado como\
          \ disponível para inclusão em um pedido"
    - location:
        type: "MODEL"
        name: "NewProduct.definition1"
      properties:
        description: "O nome da primeira definição do produto. Por exemplo: Cor"
    - location:
        type: "MODEL"
        name: "NewProduct.definition1Values"
      properties:
        description:
          "Todos os possíveis valores da primeira definição do produto. Exemplo:\
          \ Azul, Verde e Preto"
    - location:
        type: "MODEL"
        name: "NewProduct.definition2"
      properties:
        description: "O nome da segunda definição do produto. Por exemplo: Tamanho"
    - location:
        type: "MODEL"
        name: "NewProduct.definition2Values"
      properties:
        description:
          "Todos os possíveis valores da primeira definição do produto. Exemplo:\
          \ P, M e G"
    - location:
        type: "MODEL"
        name: "NewProduct.erpId"
      properties:
        description:
          "Código utilizado no sistema de ERP para identificar este cliente.\
          \ Normalmente é o código de barras"
    - location:
        type: "MODEL"
        name: "NewProduct.mainVariant"
      properties:
        description: "A variante principal deste produto"
    - location:
        type: "MODEL"
        name: "NewProduct.name"
      properties:
        description: "Nome do produto"
    - location:
        type: "MODEL"
        name: "NewProduct.sellOutOfStock"
      properties:
        description:
          "Se este produto pode ser vendido com estoque igual ou inferior\
          \ a zero"
    - location:
        type: "MODEL"
        name: "NewProduct.service"
      properties:
        description: "Indica se este produto é um serviço"
    - location:
        type: "MODEL"
        name: "NewProduct.trackInventory"
      properties:
        description:
          "Se verdadeiro a OmniChat irá controla o estoque. Quando um novo\
          \ pedido é criado o estoque da variante é decrementado, quando um pedido é\
          \ cancelado ou não pago o estoque é restaurado"
    - location:
        type: "MODEL"
        name: "NewProduct.variants"
      properties:
        description: "Todas as variantes deste produto, inclusive a variante principal"
    - location:
        type: "MODEL"
        name: "Note.text"
      properties:
        description: "Texto desta nota"
    - location:
        type: "MODEL"
        name: "Order.boletoInstructions.dueDate"
      properties:
        description:
          "A data de vencimento do boleto. Se installments for maior que\
          \ 1, então esta é a data de vencimento do 1.o boleto"
    - location:
        type: "MODEL"
        name: "Order.boletoInstructions.installments"
      properties:
        description: "O número de boletos que serão gerados"
    - location:
        type: "MODEL"
        name: "Order.boletoInstructions"
      properties:
        description: "Instruções relativas ao pagamento por boleto deste pedido"
    - location:
        type: "MODEL"
        name: "Order.canAcceptBoleto"
      properties:
        description: "Se este pedido pode ser pelo cliente usando boleto"
    - location:
        type: "MODEL"
        name: "Order.canAcceptCreditCard"
      properties:
        description: "Se este pedido pode ser pago usando cartão de crédito"
    - location:
        type: "MODEL"
        name: "Order.createdAt"
      properties:
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Order.creditCardInstructions.installments"
      properties:
        description: "Máximo de parcelas aceitas para pagamento deste pedido"
    - location:
        type: "MODEL"
        name: "Order.creditCardInstructions"
      properties:
        description:
          "Instruções relativas ao pagamento por cartão de crédito deste\
          \ pedido"
    - location:
        type: "MODEL"
        name: "Order.customer"
      properties:
        description: "Comprador deste pedido"
    - location:
        type: "MODEL"
        name: "Order.deliveryTime"
      properties:
        description: "Quanto tempo este pedido irá demorar para chegar até o cliente"
    - location:
        type: "MODEL"
        name: "Order.discount"
      properties:
        description: "Valor do desconto"
    - location:
        type: "MODEL"
        name: "Order.discountMode"
      properties:
        description: "Como este desconto será calculado"
    - location:
        type: "MODEL"
        name: "Order.items"
      properties:
        description: "Lista de itens deste pedido"
    - location:
        type: "MODEL"
        name: "Order.notes"
      properties:
        description: "Notas sobre este pedido"
    - location:
        type: "MODEL"
        name: "Order.objectId"
      properties:
        description: "Identificador único deste objeto na base de dados da OmniChat"
    - location:
        type: "MODEL"
        name: "Order.orderId"
      properties:
        description:
          "Identificador único deste pedido. Automaticamente incrementado\
          \ quando um novo pedido é criado"
    - location:
        type: "MODEL"
        name: "Order.paymentGatewayId"
      properties:
        description:
          "Identificador único deste pedido no Gateway de pagamento configurado\
          \ nesta loja"
    - location:
        type: "MODEL"
        name: "Order.paymentInstallmentsCount"
      properties:
        description:
          "Número de parcelas selecionadas pelo cliente para pagamento deste\
          \ pedido. Somente usado para pagamento no cartão de crédito"
    - location:
        type: "MODEL"
        name: "Order.paymentMethod"
      properties:
        description: "Como o cliente escolhei pagar por este pedido"
    - location:
        type: "MODEL"
        name: "Order.pickUpInStore"
      properties:
        description: "Se cliente irá buscar este pedido na loja"
    - location:
        type: "MODEL"
        name: "Order.shippingAddress"
      properties:
        description: "O endereço de entrega deste pedido"
    - location:
        type: "MODEL"
        name: "Order.shippingCost"
      properties:
        description: "O custo do frete"
    - location:
        type: "MODEL"
        name: "Order.shippingMethod"
      properties:
        description: "Qual o método de envio para este pedido"
    - location:
        type: "MODEL"
        name: "Order.status"
      properties:
        description: "O status atual deste pedido"
    - location:
        type: "MODEL"
        name: "Order.updatedAt"
      properties:
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Orders"
      properties:
        description: "Lista de pedidos"
    - location:
        type: "MODEL"
        name: "Product.blocked"
      properties:
        description:
          "Indica se este produto esta bloqueado para vendas. Este produto\
          \ será listado na aba de produtos da OmniChat, mas não será mostrado como\
          \ disponível para inclusão em um pedido"
    - location:
        type: "MODEL"
        name: "Product.createdAt"
      properties:
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Product.definition1"
      properties:
        description: "O nome da primeira definição do produto. Por exemplo: Cor"
    - location:
        type: "MODEL"
        name: "Product.definition1Values"
      properties:
        description:
          "Todos os possíveis valores da primeira definição do produto. Exemplo:\
          \ Azul, Verde e Preto"
    - location:
        type: "MODEL"
        name: "Product.definition2"
      properties:
        description: "O nome da segunda definição do produto. Por exemplo: Tamanho"
    - location:
        type: "MODEL"
        name: "Product.definition2Values"
      properties:
        description:
          "Todos os possíveis valores da primeira definição do produto. Exemplo:\
          \ P, M e G"
    - location:
        type: "MODEL"
        name: "Product.erpId"
      properties:
        description:
          "Código utilizado no sistema de ERP para identificar este cliente.\
          \ Normalmente é o código de barras"
    - location:
        type: "MODEL"
        name: "Product.mainVariant"
      properties:
        description: "A variante principal deste produto"
    - location:
        type: "MODEL"
        name: "Product.name"
      properties:
        description: "Nome do produto"
    - location:
        type: "MODEL"
        name: "Product.objectId"
      properties:
        description: "Identificador único deste objeto na base de dados da OmniChat"
    - location:
        type: "MODEL"
        name: "Product.sellOutOfStock"
      properties:
        description:
          "Se este produto pode ser vendido com estoque igual ou inferior\
          \ a zero"
    - location:
        type: "MODEL"
        name: "Product.service"
      properties:
        description: "Indica se este produto é um serviço"
    - location:
        type: "MODEL"
        name: "Product.trackInventory"
      properties:
        description:
          "Se verdadeiro a OmniChat irá controla o estoque. Quando um novo\
          \ pedido é criado o estoque da variante é decrementado, quando um pedido é\
          \ cancelado ou não pago o estoque é restaurado"
    - location:
        type: "MODEL"
        name: "Product.updatedAt"
      properties:
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Product.variants"
      properties:
        description: "Todas as variantes deste produto, inclusive a variante principal"
    - location:
        type: "MODEL"
        name: "Products"
      properties:
        description: "Lista de produtos"
    - location:
        type: "MODEL"
        name: "ResponseCount.count"
      properties:
        description: "Número de objetos encontrados"
    - location:
        type: "MODEL"
        name: "ResponseEmpty"
      properties:
        title: "ResponseEmpty Schema"
    - location:
        type: "MODEL"
        name: "ResponseError.code"
      properties:
        description: "O código do erro"
    - location:
        type: "MODEL"
        name: "ResponseError.error"
      properties:
        description: "Breve descrição do erro"
    - location:
        type: "MODEL"
        name: "ResponseObjectCreate.createdAt"
      properties:
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "ResponseObjectCreate.objectId"
      properties:
        description: "Identificador único deste objeto na base de dados da OmniChat"
    - location:
        type: "MODEL"
        name: "ResponseUpdatedObject.updatedAt"
      properties:
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Variant.createdAt"
      properties:
        description:
          "A data e a hora que este objeto foi criado. API retorna o valor\
          \ no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Variant.definition1Value"
      properties:
        description: "O valor da primeira definição desta variante. Exemplo: Azul"
    - location:
        type: "MODEL"
        name: "Variant.definition2Value"
      properties:
        description: "O valor da segunda definição desta variante. Exemplo: P"
    - location:
        type: "MODEL"
        name: "Variant.erpId"
      properties:
        description:
          "O código do sistema de ERP associado a esta variante, normalmente\
          \ é o código de barras"
    - location:
        type: "MODEL"
        name: "Variant.height"
      properties:
        description: "Altura desta variante em centímetros"
    - location:
        type: "MODEL"
        name: "Variant.imageUrl"
      properties:
        description: "A url da imagem desta variante"
    - location:
        type: "MODEL"
        name: "Variant.length"
      properties:
        description: "Comprimento desta variante em centímetros"
    - location:
        type: "MODEL"
        name: "Variant.objectId"
      properties:
        description: "Identificador único deste objeto na base de dados da OmniChat"
    - location:
        type: "MODEL"
        name: "Variant.price"
      properties:
        description: "Preço desta variante"
    - location:
        type: "MODEL"
        name: "Variant.quantity"
      properties:
        description:
          "Quantidade desta variante em estoque, se aplica quando product.trackInventory\
          \ estiver marcado como verdadeiro"
    - location:
        type: "MODEL"
        name: "Variant.salePrice"
      properties:
        description: "Promoção desta variante"
    - location:
        type: "MODEL"
        name: "Variant.updatedAt"
      properties:
        description:
          "A data e a hora que este objeto foi modificado pela última vez.\
          \ API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
    - location:
        type: "MODEL"
        name: "Variant.visible"
      properties:
        description: "Se falso então esta variante não poderá ser incluída em um pedido"
    - location:
        type: "MODEL"
        name: "Variant.weight"
      properties:
        description: "Peso desta variante em gramas"
    - location:
        type: "MODEL"
        name: "Variant.width"
      properties:
        description: "Largura desta variante em centímetros"
    - location:
        type: "MODEL"
        name: "Variants.results"
      properties:
        description: "Lista de variantes"
    - location:
        type: "RESOURCE"
        path: "/chats/{objectId}/messages/count"
      properties:
        description: "Contar mensagens"
    - location:
        type: "RESOURCE"
        path: "/chats/{objectId}/messages"
      properties:
        description:
          "Uma mensagem (message) enviada ou recebida na OmniChat. Toda mensagem\
          \ necessariamente pertence a uma conversa (chat)."
    - location:
        type: "RESOURCE"
        path: "/chats"
      properties:
        description:
          "Uma conversa (chat) representa um conjunto de mensagens trocadas\
          \ entre um usuário conectado a uma das plataformas integradas na OmniChat\
          \ e um usuário da sua loja"
    - location:
        type: "RESPONSE"
        path: "/chats/count"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/chats/{objectId}/messages/count"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/chats/{objectId}/messages/{messageId}"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/chats/{objectId}/messages"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/chats/{objectId}"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/chats/{objectId}"
        method: "GET"
        statusCode: "404"
      properties:
        description: "404 response"
    - location:
        type: "RESPONSE"
        path: "/chats"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/customers/count"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/customers/{objectId}"
        method: "DELETE"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/customers/{objectId}"
        method: "DELETE"
        statusCode: "404"
      properties:
        description: "404 response"
    - location:
        type: "RESPONSE"
        path: "/customers/{objectId}"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/customers/{objectId}"
        method: "GET"
        statusCode: "404"
      properties:
        description: "404 response"
    - location:
        type: "RESPONSE"
        path: "/customers/{objectId}"
        method: "PUT"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/customers/{objectId}"
        method: "PUT"
        statusCode: "404"
      properties:
        description: "404 response"
    - location:
        type: "RESPONSE"
        path: "/customers/{objectId}"
        method: "PUT"
        statusCode: "500"
      properties:
        description: "500 response"
    - location:
        type: "RESPONSE"
        path: "/customers"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/customers"
        method: "POST"
        statusCode: "201"
      properties:
        description: "201 response"
    - location:
        type: "RESPONSE"
        path: "/customers"
        method: "POST"
        statusCode: "400"
      properties:
        description: "400 response"
    - location:
        type: "RESPONSE"
        path: "/orders/count"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/orders/{objectId}"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/orders/{objectId}"
        method: "GET"
        statusCode: "404"
      properties:
        description: "404 response"
    - location:
        type: "RESPONSE"
        path: "/orders"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/products/count"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/products/{objectId}/variants/count"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/products/{objectId}/variants/{variantId}"
        method: "DELETE"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/products/{objectId}/variants/{variantId}"
        method: "PUT"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/products/{objectId}/variants"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/products/{objectId}/variants"
        method: "POST"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/products/{objectId}"
        method: "DELETE"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/products/{objectId}"
        method: "DELETE"
        statusCode: "404"
      properties:
        description: "404 response"
    - location:
        type: "RESPONSE"
        path: "/products/{objectId}"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/products/{objectId}"
        method: "GET"
        statusCode: "404"
      properties:
        description: "404 response"
    - location:
        type: "RESPONSE"
        path: "/products/{objectId}"
        method: "PUT"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/products/{objectId}"
        method: "PUT"
        statusCode: "404"
      properties:
        description: "404 response"
    - location:
        type: "RESPONSE"
        path: "/products/{objectId}"
        method: "PUT"
        statusCode: "500"
      properties:
        description: "500 response"
    - location:
        type: "RESPONSE"
        path: "/products"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/products"
        method: "POST"
        statusCode: "201"
      properties:
        description: "201 response"
    - location:
        type: "RESPONSE"
        path: "/products"
        method: "POST"
        statusCode: "400"
      properties:
        description: "400 response"
    - location:
        type: "RESPONSE"
        path: "/products"
        method: "POST"
        statusCode: "404"
      properties:
        description: "404 response"
    - location:
        type: "RESPONSE"
        path: "/products"
        method: "POST"
        statusCode: "500"
      properties:
        description: "500 response"
    - location:
        type: "RESPONSE"
        path: "/branches/{objectId}"
        method: "GET"
        statusCode: "200"
      properties:
        description: "200 response"
    - location:
        type: "RESPONSE"
        path: "/branches/{objectId}"
        method: "GET"
        statusCode: "404"
x-amazon-apigateway-request-validators:
  Validate query string parameters and headers:
    validateRequestParameters: true
    validateRequestBody: false
