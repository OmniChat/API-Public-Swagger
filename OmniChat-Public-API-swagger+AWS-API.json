{
  "swagger": "2.0",
  "info": {
    "version": "2017-08-04T18:44:54Z",
    "title": "OmniChat-Dev"
  },
  "host": "dev-api.omni.chat",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/customers": {
      "get": {
        "description": "Listar clientes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limitar o número de objetos retornados",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "description": "Chave de autorização obtida da OmniChat que autoriza o uso da API. Deve ser utilizado em conjunto com a api-key",
            "required": true,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Qual a propriedade deve ser usada para ordenar resultado desta requição",
            "required": false,
            "type": "string"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filtrar os objetos que serão resultados através de queries",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Quantos objetos deverão ser pulados. Pode ser usado em conjunto com offset para paginação ",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de clientes",
            "schema": {
              "$ref": "#/definitions/Customers"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.querystring.limit": "method.request.querystring.limit",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.querystring.order": "method.request.querystring.order",
            "integration.request.querystring.offset": "method.request.querystring.skip",
            "integration.request.querystring.where": "method.request.querystring.where"
          },
          "uri": "https://dev-api-adapter.omni.chat/customers",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "description": "Criar cliente",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "NewCustomer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewCustomer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cliente criado",
            "schema": {
              "$ref": "#/definitions/ResponseObjectCreate"
            }
          },
          "400": {
            "description": "400 response"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "201": {
              "statusCode": "201"
            },
            "400": {
              "statusCode": "400"
            },
            "500": {
              "statusCode": "500"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret"
          },
          "uri": "https://dev-api-adapter.omni.chat/customers",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      }
    },
    "/customers/count": {
      "get": {
        "description": "Contar clientes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-api-secret",
            "in": "header",
            "description": "Chave de autorização obtida da OmniChat que autoriza o uso da API. Deve ser utilizado em conjunto com a api-key",
            "required": true,
            "type": "string"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filtrar os objetos que serão resultados através de queries",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Contagem de clientes",
            "schema": {
              "$ref": "#/definitions/ResponseCount"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.querystring.where": "method.request.querystring.where"
          },
          "uri": "https://dev-api-adapter.omni.chat/customers/count",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      }
    },
    "/customers/{objectId}": {
      "get": {
        "description": "Obter um único cliente",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "description": "Identificador único deste objeto na base de dados da OmniChat",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "description": "Chave de autorização obtida da OmniChat que autoriza o uso da API. Deve ser utilizado em conjunto com a api-key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "404": {
            "description": "404 response",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "404": {
              "statusCode": "404"
            },
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.include": "'address'",
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.querystring.keys": "'lastName,fullName,acceptsMarketing,email,phoneAreaCode,phoneCountryCode,phoneNumber,businessAccount,businessName,businessTaxId,stateTaxId,name,birthDate,address,externalImageUrl,gender'",
            "integration.request.path.objectId": "method.request.path.objectId"
          },
          "uri": "https://dev-api-adapter.omni.chat/customers/{objectId}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "description": "Atualizar um cliente existente",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "description": "Identificador único deste cliente na base de dados da OmniChat",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente atualizado com sucesso",
            "schema": {
              "$ref": "#/definitions/ResponseUpdatedObject"
            }
          },
          "404": {
            "description": "404 response",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "404": {
              "statusCode": "404"
            },
            "500": {
              "statusCode": "500"
            },
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.path.objectId": "method.request.path.objectId"
          },
          "uri": "https://dev-api-adapter.omni.chat/customers/{objectId}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "description": "Apagar um cliente",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "description": "Identificador único deste cliente na base de dados da OmniChat",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente removido com sucesso",
            "schema": {
              "$ref": "#/definitions/ResponseEmpty"
            }
          },
          "404": {
            "description": "404 response",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "responses": {
            "404": {
              "statusCode": "404"
            },
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.path.objectId": "method.request.path.objectId"
          },
          "uri": "https://dev-api-adapter.omni.chat/customers/{objectId}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      }
    },
    "/orders": {
      "get": {
        "description": "Listar pedidos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "description": "Limitar o número de objetos retornados",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Qual a propriedade deve ser usada para ordenar resultado desta requição",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filtrar os objetos que serão resultados através de queries",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pedidos",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.querystring.limit": "method.request.querystring.limit",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.querystring.order": "method.request.querystring.order",
            "integration.request.querystring.offset": "method.request.querystring.skip",
            "integration.request.querystring.where": "method.request.querystring.where"
          },
          "uri": "https://dev-api-adapter.omni.chat/orders",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      }
    },
    "/orders/count": {
      "get": {
        "description": "Contar pedidos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filtrar os objetos que serão resultados através de queries",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Contar pedidos",
            "schema": {
              "$ref": "#/definitions/ResponseCount"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.querystring.where": "method.request.querystring.where"
          },
          "uri": "https://dev-api-adapter.omni.chat/orders/count",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      }
    },
    "/orders/{objectId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "description": "Identificador único deste objeto na base de dados da OmniChat",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "o Pedido",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "404": {
            "description": "404 response",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "404": {
              "statusCode": "404"
            },
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.include": "'customer,items,notes,user,shippingAddress,salesPerson,statusTracking'",
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.path.objectId": "method.request.path.objectId"
          },
          "uri": "https://dev-api-adapter.omni.chat/orders/{objectId}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      }
    },
    "/products": {
      "get": {
        "description": "Listar produtos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limitar o número de objetos retornados",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Qual a propriedade deve ser usada para ordenar resultado desta requição",
            "required": false,
            "type": "string"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filtrar os objetos que serão resultados através de queries",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de produtos",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.querystring.limit": "method.request.querystring.limit",
            "integration.request.querystring.order": "method.request.querystring.order",
            "integration.request.querystring.offset": "method.request.querystring.skip",
            "integration.request.querystring.where": "method.request.querystring.where"
          },
          "uri": "https://dev-api-adapter.omni.chat/products",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "description": "Criar produto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "NewProduct",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "201 response",
            "schema": {
              "$ref": "#/definitions/ResponseObjectCreate"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "404 response",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "201": {
              "statusCode": "201"
            },
            "400": {
              "statusCode": "400"
            },
            "404": {
              "statusCode": "404"
            },
            "500": {
              "statusCode": "500"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret"
          },
          "uri": "https://dev-api-adapter.omni.chat/products",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      }
    },
    "/products/count": {
      "get": {
        "description": "Contar produtos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filtrar os objetos que serão resultados através de queries",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/ResponseCount"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.querystring.where": "method.request.querystring.where"
          },
          "uri": "https://dev-api-adapter.omni.chat/products/count",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      }
    },
    "/products/{objectId}": {
      "get": {
        "description": "Obter um produto",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Identificador único deste objeto na base de dados da OmniChat",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "404 response",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "404": {
              "statusCode": "404"
            },
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.include": "'variants,mainVariant'",
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.path.objectId": "method.request.path.objectId"
          },
          "uri": "https://dev-api-adapter.omni.chat/products/{objectId}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "description": "Alterar um produto existente",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "description": "Identificador único deste objeto na base de dados da OmniChat",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/ResponseUpdatedObject"
            }
          },
          "404": {
            "description": "404 response",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "404": {
              "statusCode": "404"
            },
            "500": {
              "statusCode": "500"
            },
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.path.objectId": "method.request.path.objectId"
          },
          "uri": "https://dev-api-adapter.omni.chat/products/{objectId}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "description": "Remover um produto e suas variantes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Identificador único deste objeto na base de dados da OmniChat",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/ResponseEmpty"
            }
          },
          "404": {
            "description": "404 response",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "responses": {
            "404": {
              "statusCode": "404"
            },
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.path.objectId": "method.request.path.objectId"
          },
          "uri": "https://dev-api-adapter.omni.chat/products/{objectId}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      }
    },
    "/products/{objectId}/variants": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Identificador único deste objeto na base de dados da OmniChat",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de variantes relativas a este produto",
            "schema": {
              "$ref": "#/definitions/Variants"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.path.objectId": "method.request.path.objectId"
          },
          "uri": "https://dev-api-adapter.omni.chat/products/{objectId}/variants",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "description": "Criar uma variação deste produto",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/ResponseObjectCreate"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.path.objectId": "method.request.path.objectId"
          },
          "uri": "https://dev-api-adapter.omni.chat/products/{objectId}/variants",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      }
    },
    "/products/{objectId}/variants/count": {
      "get": {
        "description": "Contar variantes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Identificador único deste objeto na base de dados da OmniChat",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Contagem de variantes",
            "schema": {
              "$ref": "#/definitions/ResponseCount"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.path.objectId": "method.request.path.objectId"
          },
          "uri": "https://dev-api-adapter.omni.chat/products/{objectId}/variants/count",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      }
    },
    "/products/{objectId}/variants/{variantId}": {
      "put": {
        "description": "Alterar uma única variante de um produto",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "variantId",
            "description": "Identificador único desta variante na base de dados da OmniChat",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "objectId",
            "description": "Identificador único deste produto na base de dados da OmniChat",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Variante alterada com sucesso",
            "schema": {
              "$ref": "#/definitions/ResponseUpdatedObject"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.path.variantId": "method.request.path.variantId",
            "integration.request.path.objectId": "method.request.path.objectId"
          },
          "uri": "https://dev-api-adapter.omni.chat/products/{objectId}/variants/{variantId}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "description": "Remover uma variante",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "variantId",
            "description": "Identificador único desta variante na base de dados da OmniChat",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Identificador único deste produto na base de dados da OmniChat",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-secret",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Variante removida com sucesso",
            "schema": {
              "$ref": "#/definitions/ResponseEmpty"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.X-Parse-REST-API-Key": "'RFxCx77Nf9VEFNnFIUxSXTrLrdfb4ntZRHG7NBIO'",
            "integration.request.header.X-Parse-Application-Id": "'lHC0oT3G1oZRPB2otwYngjMjKnsOVFGfxWw5PrTM'",
            "integration.request.header.x-api-secret": "method.request.header.x-api-secret",
            "integration.request.path.variantId": "method.request.path.variantId",
            "integration.request.path.objectId": "method.request.path.objectId"
          },
          "uri": "https://dev-api-adapter.omni.chat/products/{objectId}/variants/{variantId}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "x-api-key",
      "in": "header"
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "format": "uuid10",
          "description": "Identificador único deste objeto na base de dados da OmniChat"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "A data e a hora que este objeto foi criado. API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "A data e a hora que este objeto foi modificado pela última vez. API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
        },
        "canAcceptBoleto": {
          "type": "object",
          "description": "Se este pedido pode ser pelo cliente usando boleto",
          "properties": {}
        },
        "boletoInstructions": {
          "type": "object",
          "description": "Instruções relativas ao pagamento por boleto deste pedido",
          "properties": {
            "dueDate": {
              "type": "string",
              "description": "A data de vencimento do boleto. Se installments for maior que 1, então esta é a data de vencimento do 1.o boleto"
            },
            "installments": {
              "type": "string",
              "description": "O número de boletos que serão gerados"
            }
          }
        },
        "canAcceptCreditCard": {
          "type": "boolean",
          "description": "Se este pedido pode ser pago usando cartão de crédito"
        },
        "creditCardInstructions": {
          "type": "object",
          "description": "Instruções relativas ao pagamento por cartão de crédito deste pedido",
          "properties": {
            "installments": {
              "type": "string",
              "description": "Máximo de parcelas aceitas para pagamento deste pedido"
            }
          }
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "Comprador deste pedido"
        },
        "deliveryTime": {
          "type": "string",
          "description": "Quanto tempo este pedido irá demorar para chegar até o cliente"
        },
        "shippingCost": {
          "type": "number",
          "description": "O custo do frete"
        },
        "discountMode": {
          "description": "Como este desconto será calculado",
          "$ref": "#/definitions/OrderDiscountModeEnum"
        },
        "discount": {
          "type": "number",
          "description": "Valor do desconto"
        },
        "paymentInstallmentsCount": {
          "type": "number",
          "description": "Número de parcelas selecionadas pelo cliente para pagamento deste pedido. Somente usado para pagamento no cartão de crédito"
        },
        "items": {
          "description": "Lista de itens deste pedido",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        },
        "notes": {
          "description": "Notas sobre este pedido",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        },
        "pickUpInStore": {
          "type": "boolean",
          "description": "Se cliente irá buscar este pedido na loja"
        },
        "shippingAddress": {
          "description": "O endereço de entrega deste pedido",
          "$ref": "#/definitions/Address"
        },
        "shippingMethod": {
          "type": "string",
          "description": "Qual o método de envio para este pedido"
        },
        "paymentMethod": {
          "description": "Como o cliente escolhei pagar por este pedido",
          "$ref": "#/definitions/OrderPaymentMethodEnum"
        },
        "status": {
          "description": "O status atual deste pedido",
          "$ref": "#/definitions/OrderStatusEnum"
        },
        "paymentGatewayId": {
          "type": "string",
          "description": "Identificador único deste pedido no Gateway de pagamento configurado nesta loja"
        },
        "orderId": {
          "type": "string",
          "description": "Identificador único deste pedido. Automaticamente incrementado quando um novo pedido é criado"
        }
      }
    },
    "Orders": {
      "description": "Lista de pedidos",
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Nome deste usuário"
        },
        "lastName": {
          "type": "string",
          "description": "Sobrenome deste usuário"
        },
        "email": {
          "type": "string",
          "description": "Email deste usuário"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Nome de referência deste endereço. Por exemplo: Casa"
        },
        "addressLine1": {
          "type": "string",
          "description": "Primeira linha do endereço, normalmente é no nome da rua."
        },
        "addressLine2": {
          "type": "string",
          "description": "Segunda linha do endereço, normalmente é o complemento"
        },
        "number": {
          "type": "string",
          "description": "Número"
        },
        "suburb": {
          "type": "string",
          "description": "Bairro"
        },
        "state": {
          "type": "string",
          "description": "Estado"
        },
        "country": {
          "type": "string",
          "description": "Código do pais utilizando o formato ISO 3166-1. Exemplo para o Brasil usamos BRA."
        },
        "zip": {
          "type": "string",
          "description": "CEP"
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "format": "uuid10",
          "description": "Identificador único deste objeto na base de dados da OmniChat"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "A data e a hora que este objeto foi criado. API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "A data e a hora que este objeto foi modificado pela última vez. API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
        },
        "name": {
          "type": "string",
          "description": "Nome do cliente"
        },
        "lastName": {
          "type": "string",
          "description": "Sobrenome do cliente"
        },
        "acceptsMarketing": {
          "type": "string",
          "description": "Se o cliente aceita receber material de marketing"
        },
        "email": {
          "type": "string",
          "description": "Email do cliente"
        },
        "phoneAreaCode": {
          "type": "string",
          "description": "Código de área do telefone"
        },
        "phoneCountryCode": {
          "type": "string",
          "description": "Código do país"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Número do telefone"
        },
        "businessName": {
          "type": "string",
          "description": "Se o cliente representa uma empresa. Este é o nome da empresa."
        },
        "birthDate": {
          "type": "string",
          "description": "Data de nascimento"
        },
        "businessAccount": {
          "type": "boolean",
          "description": "Se este cliente representa uma empresa"
        },
        "taxDocumentNumber": {
          "type": "string",
          "description": "CPF do cliente"
        },
        "address": {
          "type": "array",
          "description": "O endereço de entrega do cliente",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "gender": {
          "$ref": "#/definitions/GenderEnum",
          "description": "Sexo do cliente"
        }
      }
    },
    "NewCustomer": {
      "type": "object",
      "required": [
        "name",
        "lastName"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Nome do cliente"
        },
        "lastName": {
          "type": "string",
          "description": "Sobrenome do cliente"
        },
        "acceptsMarketing": {
          "type": "string",
          "description": "Se o cliente aceita receber material de marketing",
          "default": false
        },
        "email": {
          "type": "string",
          "description": "Email do cliente"
        },
        "phoneAreaCode": {
          "type": "string",
          "description": "Código de área do telefone"
        },
        "phoneCountryCode": {
          "type": "string",
          "description": "Código do país",
          "default": "55"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Número do telefone"
        },
        "birthDate": {
          "type": "string",
          "description": "Data de nascimento"
        },
        "businessAccount": {
          "type": "boolean",
          "description": "Se este cliente representa uma empresa",
          "default": false
        },
        "businessName": {
          "type": "string",
          "description": "Se o cliente representa uma empresa. Este é o nome da empresa."
        },
        "taxDocumentNumber": {
          "type": "string",
          "description": "CPF do cliente"
        },
        "address": {
          "type": "array",
          "description": "O endereço de entrega do cliente",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "gender": {
          "$ref": "#/definitions/GenderEnum",
          "description": "Sexo do cliente"
        }
      }
    },
    "Customers": {
      "type": "object",
      "properties": {
        "results": {
          "description": "Lista de clientes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          }
        }
      },
      "description": "O cliente (customers) é o comprador cadastrado na loja e que pode efetuar pedidos. Pode ser do tipo pessoa física ou jurídica."
    },
    "Product": {
      "type": "object",
      "required": [
        "mainVariant",
        "name",
        "variants"
      ],
      "properties": {
        "objectId": {
          "type": "string",
          "format": "uuid10",
          "description": "Identificador único deste objeto na base de dados da OmniChat"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "A data e a hora que este objeto foi criado. API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "A data e a hora que este objeto foi modificado pela última vez. API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
        },
        "name": {
          "type": "string",
          "description": "Nome do produto"
        },
        "definition1": {
          "type": "string",
          "description": "O nome da primeira definição do produto. Por exemplo: Cor"
        },
        "definition1Values": {
          "type": "array",
          "description": "Todos os possíveis valores da primeira definição do produto. Exemplo: Azul, Verde e Preto",
          "items": {
            "type": "string"
          }
        },
        "definition2": {
          "type": "string",
          "description": "O nome da segunda definição do produto. Por exemplo: Tamanho"
        },
        "definition2Values": {
          "type": "array",
          "description": "Todos os possíveis valores da primeira definição do produto. Exemplo: P, M e G",
          "items": {
            "type": "string"
          }
        },
        "erpId": {
          "type": "string",
          "description": "Código utilizado no sistema de ERP para identificar este cliente. Normalmente é o código de barras"
        },
        "blocked": {
          "type": "boolean",
          "description": "Indica se este produto esta bloqueado para vendas. Este produto será listado na aba de produtos da OmniChat, mas não será mostrado como disponível para inclusão em um pedido",
          "default": false
        },
        "service": {
          "type": "boolean",
          "description": "Indica se este produto é um serviço",
          "default": false
        },
        "trackInventory": {
          "type": "boolean",
          "description": "Se verdadeiro a OmniChat irá controla o estoque. Quando um novo pedido é criado o estoque da variante é decrementado, quando um pedido é cancelado ou não pago o estoque é restaurado",
          "default": false
        },
        "sellOutOfStock": {
          "type": "boolean",
          "description": "Se este produto pode ser vendido com estoque igual ou inferior a zero",
          "default": false
        },
        "mainVariant": {
          "description": "A variante principal deste produto",
          "$ref": "#/definitions/Variant"
        },
        "variants": {
          "type": "array",
          "description": "Todas as variantes deste produto, inclusive a variante principal",
          "items": {
            "$ref": "#/definitions/Variant"
          }
        }
      }
    },
    "NewProduct": {
      "type": "object",
      "required": [
        "mainVariant",
        "name",
        "variants"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Nome do produto"
        },
        "definition1": {
          "type": "string",
          "description": "O nome da primeira definição do produto. Por exemplo: Cor"
        },
        "definition1Values": {
          "type": "array",
          "description": "Todos os possíveis valores da primeira definição do produto. Exemplo: Azul, Verde e Preto",
          "items": {
            "type": "string"
          }
        },
        "definition2": {
          "type": "string",
          "description": "O nome da segunda definição do produto. Por exemplo: Tamanho"
        },
        "definition2Values": {
          "type": "array",
          "description": "Todos os possíveis valores da primeira definição do produto. Exemplo: P, M e G",
          "items": {
            "type": "string"
          }
        },
        "erpId": {
          "type": "string",
          "description": "Código utilizado no sistema de ERP para identificar este cliente. Normalmente é o código de barras"
        },
        "blocked": {
          "type": "boolean",
          "description": "Indica se este produto esta bloqueado para vendas. Este produto será listado na aba de produtos da OmniChat, mas não será mostrado como disponível para inclusão em um pedido",
          "default": false
        },
        "service": {
          "type": "boolean",
          "description": "Indica se este produto é um serviço",
          "default": false
        },
        "trackInventory": {
          "type": "boolean",
          "description": "Se verdadeiro a OmniChat irá controla o estoque. Quando um novo pedido é criado o estoque da variante é decrementado, quando um pedido é cancelado ou não pago o estoque é restaurado",
          "default": false
        },
        "sellOutOfStock": {
          "type": "boolean",
          "description": "Se este produto pode ser vendido com estoque igual ou inferior a zero",
          "default": false
        },
        "mainVariant": {
          "description": "A variante principal deste produto",
          "$ref": "#/definitions/Variant"
        },
        "variants": {
          "type": "array",
          "description": "Todas as variantes deste produto, inclusive a variante principal",
          "items": {
            "$ref": "#/definitions/Variant"
          }
        }
      }
    },
    "Products": {
      "description": "Lista de produtos",
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      }
    },
    "Variant": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "format": "uuid10",
          "description": "Identificador único deste objeto na base de dados da OmniChat"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "A data e a hora que este objeto foi criado. API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "A data e a hora que este objeto foi modificado pela última vez. API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
        },
        "weight": {
          "type": "number",
          "description": "Peso desta variante em gramas",
          "minimum": 0
        },
        "length": {
          "type": "number",
          "description": "Comprimento desta variante em centimetros",
          "minimum": 0
        },
        "height": {
          "type": "number",
          "description": "Altura desta variante em centimetros",
          "minimum": 0
        },
        "width": {
          "type": "number",
          "description": "Largura desta variante em centimetros",
          "minimum": 0
        },
        "price": {
          "type": "number",
          "description": "Preço desta variante",
          "minimum": 0
        },
        "salePrice": {
          "type": "number",
          "description": "Promoção desta variante",
          "minimum": 0
        },
        "quantity": {
          "type": "integer",
          "description": "Quantidade desta variante em estoque, se aplica quando product.trackInventory estiver marcado como verdadeiro",
          "minimum": 0
        },
        "erpId": {
          "type": "string",
          "description": "O código do sistema de ERP associado a esta variante, normalmente é o código de barras"
        },
        "definition1Value": {
          "type": "string",
          "description": "O valor da primeira definição desta variante. Exmplo: Azul"
        },
        "definition2Value": {
          "type": "string",
          "description": "O valor da segunda definição desta variante. Exmplo: P"
        },
        "imageUrl": {
          "type": "string",
          "format": "url",
          "description": "A url da imagem desta variante"
        },
        "visible": {
          "type": "boolean",
          "description": "Se falso então esta variante não poderá ser incluida em um pedido",
          "default": true
        }
      }
    },
    "NewVariant": {
      "type": "object",
      "required": [
        "price",
        "quantity"
      ],
      "properties": {
        "weight": {
          "type": "number",
          "description": "Peso desta variante em gramas",
          "minimum": 0
        },
        "length": {
          "type": "number",
          "description": "Comprimento desta variante em centimetros",
          "minimum": 0
        },
        "height": {
          "type": "number",
          "description": "Altura desta variante em centimetros",
          "minimum": 0
        },
        "width": {
          "type": "number",
          "description": "Largura desta variante em centimetros",
          "minimum": 0
        },
        "price": {
          "type": "number",
          "description": "Preço desta variante",
          "minimum": 0
        },
        "salePrice": {
          "type": "number",
          "description": "Promoção desta variante",
          "minimum": 0
        },
        "quantity": {
          "type": "integer",
          "description": "Quantidade desta variante em estoque, se aplica quando product.trackInventory estiver marcado como verdadeiro",
          "minimum": 0
        },
        "erpId": {
          "type": "string",
          "description": "O código do sistema de ERP associado a esta variante, normalmente é o código de barras"
        },
        "definition1Value": {
          "type": "string",
          "description": "O valor da primeira definição desta variante. Exmplo: Azul"
        },
        "definition2Value": {
          "type": "string",
          "description": "O valor da segunda definição desta variante. Exmplo: P"
        },
        "imageUrl": {
          "type": "string",
          "format": "url",
          "description": "A url da imagem desta variante"
        },
        "visible": {
          "type": "boolean",
          "description": "Se falso então esta variante não poderá ser incluida em um pedido",
          "default": true
        },
        "isMainVariant": {
          "type": "boolean",
          "description": "Esta variante é a variação principal deste produto"
        }
      }
    },
    "Variants": {
      "type": "object",
      "properties": {
        "results": {
          "description": "Lista de variantes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variant"
          }
        }
      }
    },
    "Item": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "format": "uuid10",
          "description": "Identificador único deste objeto na base de dados da OmniChat"
        },
        "name": {
          "type": "string",
          "description": "Nome deste item. É copiado de product.name quando incluído no carrinho"
        },
        "description": {
          "type": "string",
          "description": "Detalhes deste item. É copiado de product.detail quando incluído no carrinho"
        },
        "price": {
          "type": "number",
          "description": "Preço deste item"
        },
        "productReference": {
          "type": "string",
          "description": "Código de referência deste item. É copiado de variant.erpId"
        },
        "quantity": {
          "type": "number",
          "description": "A quantidade deste item"
        },
        "variant": {
          "description": "O objectId da variante que deu origem a este item.",
          "$ref": "#/definitions/Variant"
        },
        "weight": {
          "type": "number",
          "description": "Peso desta item em gramas. É copiado de variant.weight",
          "minimum": 0
        },
        "length": {
          "type": "number",
          "description": "Comprimento desta item em centimetros. É copiado de variant.length",
          "minimum": 0
        },
        "height": {
          "type": "number",
          "description": "Altura desta item em centimetros. É copiado de variant.height",
          "minimum": 0
        },
        "width": {
          "type": "number",
          "description": "Largura desta item em centimetros. É copiado de variant.width",
          "minimum": 0
        }
      }
    },
    "Note": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Texto desta nota"
        }
      }
    },
    "ResponseEmpty": {
      "type": "object",
      "title": "ResponseEmpty Schema"
    },
    "ResponseCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Número de objetos encontrados"
        }
      }
    },
    "OrderPaymentMethodEnum": {
      "type": "string",
      "enum": [
        "CREDITCARD",
        "BOLETO"
      ]
    },
    "OrderDiscountModeEnum": {
      "type": "string",
      "enum": [
        "PERCENTAGE",
        "ABOSOLUTE"
      ]
    },
    "GenderEnum": {
      "type": "string",
      "enum": [
        "male",
        "female",
        "neutral",
        "other"
      ]
    },
    "OrderStatusEnum": {
      "type": "string",
      "enum": [
        "CREATING",
        "CREATED",
        "PROVISIONING",
        "OPEN",
        "WAITING",
        "PAID",
        "PACKAGED",
        "SHIPPED",
        "PARTIALLY_SHIPPED",
        "DELIVERED",
        "NOT_PAID",
        "PARTIAL_PAID",
        "OVER_PAID",
        "CANCELLED",
        "REVERTED",
        "ERROR"
      ]
    },
    "ResponseObjectCreate": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "format": "uuid10",
          "description": "Identificador único deste objeto na base de dados da OmniChat"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "A data e a hora que este objeto foi criado. API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
        }
      }
    },
    "ResponseUpdatedObject": {
      "type": "object",
      "properties": {
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "A data e a hora que este objeto foi modificado pela última vez. API retorna o valor no formato ISO 8601 em UTC. Exemplo: 2017-08-04T16:27:55.397Z"
        }
      }
    },
    "ResponseError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "description": "O código do erro"
        },
        "error": {
          "type": "string",
          "description": "Breve descrição do erro"
        }
      }
    }
  },
  "x-amazon-apigateway-documentation": {},
  "x-amazon-apigateway-request-validators": {
    "Validate query string parameters and headers": {
      "validateRequestParameters": true,
      "validateRequestBody": false
    }
  }
}